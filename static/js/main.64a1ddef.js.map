{"version":3,"file":"static/js/main.64a1ddef.js","mappings":"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","sources":["context/SurgeryContext.js","Theme.js","screens/ORDashboard.js","screens/HomeScreen.js","data/vitalsSampleData.js","components/VitalsDataSection.js","screens/DetailedOR.js","services/firebase.js","services/config.js","screens/PACUScreen.js","screens/RegionalScreen.js","screens/AcutePainScreen.js","screens/EpiduralsTab.js","context/ObstetricsContext.js","screens/DeliveriesTab.js","screens/ObstetricsScreen.js","components/ProfileScreen.js","components/PushNotificationsScreen.js","screens/DetailedObstetrics.js","screens/ObstetricsProgressionScreen.js","navigation/MenuInterface.js","services/notifications.js","App.js","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport surgeriesData from \"../data/surgeries.json\"; // Corrected path\r\n\r\nconst SurgeryContext = createContext();\r\n\r\nexport const useSurgery = () => useContext(SurgeryContext);\r\n\r\nexport const SurgeryProvider = ({ children }) => {\r\n  // Including OR data in state with shifts and possible replacements\r\n  const initialOrData = [\r\n    {\r\n      id: \"OR 1\",\r\n      surgeonName: \"Dr. Smith\",\r\n      raName: \"Dr. Johnson\", // Primary anesthesiologist\r\n      shift: \"Call Shift #2\",\r\n      replacement: {\r\n        name: \"LeBron James\", // Replacement anesthesiologist\r\n        shift: \"Call Shift #1\",\r\n        time: \"3:00 PM\", // Time of replacement\r\n      },\r\n      surgeryType: \"Open Appendectomy\",\r\n    },\r\n    {\r\n      id: \"OR 2\",\r\n      surgeonName: \"Dr. Jones\",\r\n      raName: \"Dr. Williams\",\r\n      shift: \"Call Shift #3\", // No replacement, finishing the case\r\n      replacement: null,\r\n      surgeryType: \"Single Lung Transplant\",\r\n    },\r\n    {\r\n      id: \"OR 3\",\r\n      surgeonName: \"Dr. Vogel\",\r\n      raName: \"Dr. Neils\",\r\n      shift: \"Call Shift #5\",\r\n      replacement: null, // Finishing the case\r\n      surgeryType: \"Spinal Fusion: Anterior Lumbar Interbody Fusion (ALIF)\",\r\n    },\r\n    {\r\n      id: \"OR 4\",\r\n      surgeonName: \"Dr. Lee\",\r\n      raName: \"Dr. Kim\",\r\n      shift: \"Call Shift #1\",\r\n      replacement: {\r\n        name: \"Dr. Patel\",\r\n        shift: \"Call Shift #4\",\r\n        time: \"4:30 PM\", // Time of replacement\r\n      },\r\n      surgeryType: \"Cesarean Section\",\r\n    },\r\n    {\r\n      id: \"OR 5\",\r\n      surgeonName: \"Dr. Gomez\",\r\n      raName: \"Dr. Santos\",\r\n      shift: \"Call Shift #2\",\r\n      replacement: null,\r\n      surgeryType: \"Herniorrhaphy (Repair)\",\r\n    },\r\n    {\r\n      id: \"OR 6\",\r\n      surgeonName: \"Dr. Patel\",\r\n      raName: \"Dr. Murray\",\r\n      shift: \"Call Shift #3\",\r\n      replacement: {\r\n        name: \"Dr. James\",\r\n        shift: \"Call Shift #1\",\r\n        time: \"12:00 PM\",\r\n      },\r\n      surgeryType: \"Herniorrhaphy (Removal)\",\r\n    },\r\n  ].map((or) => ({\r\n    ...or,\r\n    surgeryStage: surgeriesData.find(\r\n      (surgery) => surgery.surgeryType === or.surgeryType,\r\n    )?.steps[0], // Set to first step\r\n  }));\r\n\r\n  const [orData, setOrData] = useState(initialOrData);\r\n\r\n  // Function to get surgery steps by type\r\n  const getSurgerySteps = (surgeryType) => {\r\n    const surgery = surgeriesData.find(\r\n      (surgery) => surgery.surgeryType === surgeryType,\r\n    );\r\n    return surgery ? surgery.steps : [];\r\n  };\r\n\r\n  // Function to update the current stage of a surgery in OR data\r\n  const updateSurgeryStage = (orId, newStage) => {\r\n    setOrData((prev) =>\r\n      prev.map((or) =>\r\n        or.id === orId ? { ...or, surgeryStage: newStage } : or,\r\n      ),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SurgeryContext.Provider\r\n      value={{ orData, updateSurgeryStage, getSurgerySteps }}\r\n    >\r\n      {children}\r\n    </SurgeryContext.Provider>\r\n  );\r\n};\r\n","export const Colors = {\r\n  primary: \"#4B2E83\",\r\n  secondary: \"#0066CC\",\r\n  background: \"#f5f5f5\",\r\n  cardBackground: \"#ffffff\",\r\n  text: \"#333333\",\r\n  textLight: \"#666666\",\r\n  border: \"#e0e0e0\",\r\n  highlight: \"#FF6347\",\r\n  success: \"#4CAF50\",\r\n  warning: \"#FFC107\",\r\n  error: \"#F44336\",\r\n};\r\n\r\nexport const Fonts = {\r\n  family: {\r\n    regular: \"Roboto-Regular\",\r\n    bold: \"Roboto-Bold\",\r\n    italic: \"Roboto-Italic\",\r\n  },\r\n  size: {\r\n    tiny: 12,\r\n    small: 14,\r\n    medium: 16,\r\n    large: 18,\r\n    xlarge: 22,\r\n    title: 26,\r\n  },\r\n};\r\n\r\nexport const Spacing = {\r\n  xs: 4,\r\n  small: 8,\r\n  medium: 16,\r\n  large: 24,\r\n  xlarge: 32,\r\n};\r\n\r\nexport const Borders = {\r\n  radius: {\r\n    small: 4,\r\n    medium: 8,\r\n    large: 16,\r\n  },\r\n  width: 1,\r\n  color: Colors.border,\r\n};\r\n\r\nexport const Shadows = {\r\n  shadowColor: \"#000\",\r\n  shadowOffset: { width: 0, height: 2 },\r\n  shadowOpacity: 0.1,\r\n  shadowRadius: 4,\r\n  elevation: 3,\r\n};\r\n\r\nexport const ButtonStyles = {\r\n  primary: {\r\n    backgroundColor: Colors.primary,\r\n    paddingVertical: Spacing.small,\r\n    paddingHorizontal: Spacing.medium,\r\n    borderRadius: Borders.radius.medium,\r\n    alignItems: \"center\",\r\n  },\r\n  secondary: {\r\n    backgroundColor: Colors.secondary,\r\n    paddingVertical: Spacing.small,\r\n    paddingHorizontal: Spacing.medium,\r\n    borderRadius: Borders.radius.medium,\r\n    alignItems: \"center\",\r\n  },\r\n  disabled: {\r\n    backgroundColor: Colors.border,\r\n    paddingVertical: Spacing.small,\r\n    paddingHorizontal: Spacing.medium,\r\n    borderRadius: Borders.radius.medium,\r\n    alignItems: \"center\",\r\n    opacity: 0.5,\r\n  },\r\n};\r\n\r\nexport const InputStyles = {\r\n  container: {\r\n    marginVertical: Spacing.small,\r\n  },\r\n  input: {\r\n    backgroundColor: Colors.cardBackground,\r\n    paddingVertical: Spacing.small,\r\n    paddingHorizontal: Spacing.medium,\r\n    borderColor: Colors.border,\r\n    borderWidth: Borders.width,\r\n    borderRadius: Borders.radius.small,\r\n    fontSize: Fonts.size.medium,\r\n    color: Colors.text,\r\n  },\r\n};\r\n\r\nexport const IconSizes = {\r\n  small: 16,\r\n  medium: 24,\r\n  large: 32,\r\n};\r\n\r\nexport const Layout = {\r\n  headerHeight: 56,\r\n  footerHeight: 60,\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { useSurgery } from \"../context/SurgeryContext\";\r\nimport { Colors, Fonts, Spacing, Borders } from \"../Theme\"; // Import theme variables\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\nconst cardWidth = width * 0.9; // Set the card width to 90% of the screen width\r\n\r\nconst ORDashboard = ({ navigation }) => {\r\n  const { orData, getSurgerySteps } = useSurgery();\r\n\r\n  const getCompletionPercentage = (surgeryType, currentStep) => {\r\n    const steps = getSurgerySteps(surgeryType);\r\n    const currentStepIndex = steps.indexOf(currentStep);\r\n    const percentage = ((currentStepIndex + 1) / steps.length) * 100;\r\n    return `${percentage.toFixed(0)}% Complete (Stage ${currentStepIndex + 1}/${steps.length})`;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={orData}\r\n        renderItem={({ item }) => (\r\n          <TouchableOpacity\r\n            style={styles.card}\r\n            onPress={() => navigation.navigate(\"DetailedOR\", { orId: item.id })}\r\n          >\r\n            <Text style={styles.cardTitle}>\r\n              {item.id}: {item.surgeryType}\r\n            </Text>\r\n            <Text style={styles.cardContent}>Surgeon: {item.surgeonName}</Text>\r\n            <Text style={styles.cardContent}>\r\n              {item.replacement\r\n                ? `Anesthesia: ${item.raName} (${item.shift}) → ${item.replacement.name} (${item.replacement.shift})`\r\n                : `Anesthesia: ${item.raName} (${item.shift}) → finish case`}\r\n            </Text>\r\n            <Text style={styles.cardContent}>Stage: {item.surgeryStage}</Text>\r\n            <Text style={styles.cardContent}>\r\n              Surgery Progression:{\" \"}\r\n              {getCompletionPercentage(item.surgeryType, item.surgeryStage)}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        )}\r\n        keyExtractor={(item) => item.id}\r\n        contentContainerStyle={styles.contentContainer}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: Colors.background, // Theme background color\r\n  },\r\n  card: {\r\n    backgroundColor: Colors.cardBackground, // Theme card background color\r\n    borderRadius: Borders.radius.medium,\r\n    padding: Spacing.medium,\r\n    marginVertical: Spacing.small,\r\n    width: cardWidth,\r\n    shadowColor: Colors.shadow,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  cardTitle: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary, // Primary color for title\r\n    marginBottom: Spacing.xs,\r\n  },\r\n  cardContent: {\r\n    fontSize: Fonts.size.small,\r\n    fontFamily: Fonts.family.regular,\r\n    color: Colors.textLight, // Light text color for content\r\n    marginBottom: Spacing.xs,\r\n  },\r\n  contentContainer: {\r\n    paddingTop: Spacing.large,\r\n    paddingBottom: Spacing.large,\r\n  },\r\n});\r\n\r\nexport default ORDashboard;\r\n","import React from \"react\";\r\nimport { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { Colors, Fonts, Spacing, Borders } from \"../Theme\"; // Import theme variables\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Welcome to the OR App!</Text>\r\n\r\n      {/* OR Dashboard Box */}\r\n      <TouchableOpacity\r\n        style={styles.box}\r\n        onPress={() => navigation.navigate(\"ORDashboard\")}\r\n      >\r\n        <FontAwesome name=\"dashboard\" size={24} color={Colors.primary} />\r\n        <Text style={styles.boxText}>OR Dashboard</Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* PACU Box */}\r\n      <TouchableOpacity\r\n        style={styles.box}\r\n        onPress={() => navigation.navigate(\"PACUScreen\")}\r\n      >\r\n        <FontAwesome name=\"hospital-o\" size={24} color={Colors.primary} />\r\n        <Text style={styles.boxText}>PACU</Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* Regional Box */}\r\n      <TouchableOpacity\r\n        style={styles.box}\r\n        onPress={() => navigation.navigate(\"RegionalScreen\")}\r\n      >\r\n        <FontAwesome name=\"map-marker\" size={24} color={Colors.primary} />\r\n        <Text style={styles.boxText}>Regional</Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* Acute Pain Box */}\r\n      <TouchableOpacity\r\n        style={styles.box}\r\n        onPress={() => navigation.navigate(\"AcutePainScreen\")}\r\n      >\r\n        <FontAwesome name=\"heartbeat\" size={24} color={Colors.primary} />\r\n        <Text style={styles.boxText}>Acute Pain</Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* Obstetrics Box */}\r\n      <TouchableOpacity\r\n        style={styles.box}\r\n        onPress={() => navigation.navigate(\"ObstetricsScreen\")}\r\n      >\r\n        <FontAwesome name=\"user-md\" size={24} color={Colors.primary} />\r\n        <Text style={styles.boxText}>Obstetrics</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: Colors.background, // Background color from theme\r\n  },\r\n  title: {\r\n    fontSize: Fonts.size.title,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n    marginBottom: Spacing.large,\r\n  },\r\n  box: {\r\n    width: \"85%\",\r\n    padding: Spacing.medium,\r\n    marginVertical: Spacing.small,\r\n    backgroundColor: Colors.cardBackground,\r\n    borderRadius: Borders.radius.medium,\r\n    shadowColor: Colors.primary,\r\n    shadowOffset: { width: 0, height: 8 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 10,\r\n    elevation: 8,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  boxText: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n    marginLeft: Spacing.small,\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n","const sampleVitals = {\r\n  heartRate: [\r\n    72, 75, 78, 74, 76, 80, 85, 82, 78, 76, 74, 73, 71, 72, 74, 77, 79, 83, 85,\r\n    81, 78, 75, 73, 72, 74, 77, 79, 82, 84, 80, 77, 74, 73, 72, 75, 78, 82, 85,\r\n    83, 79, 76, 74, 72, 73, 75,\r\n  ],\r\n  oxygenSaturation: [\r\n    98, 97, 96, 95, 94, 96, 97, 98, 99, 98, 97, 96, 95, 94, 95, 96, 97, 98, 99,\r\n    97, 96, 95, 94, 93, 95, 96, 97, 98, 99, 98, 97, 96, 95, 94, 95, 96, 97, 98,\r\n    99, 97, 96, 95, 94, 96, 98,\r\n  ],\r\n  bloodPressure: [\r\n    \"120/80\",\r\n    \"118/78\",\r\n    \"122/81\",\r\n    \"119/79\",\r\n    \"121/80\",\r\n    \"118/77\",\r\n    \"119/78\",\r\n    \"120/80\",\r\n    \"121/81\",\r\n    \"122/82\",\r\n    \"119/79\",\r\n    \"118/78\",\r\n    \"120/80\",\r\n    \"121/81\",\r\n    \"122/82\",\r\n    \"118/78\",\r\n    \"119/79\",\r\n    \"120/80\",\r\n    \"121/81\",\r\n    \"118/78\",\r\n    \"119/79\",\r\n    \"120/80\",\r\n    \"121/81\",\r\n    \"122/82\",\r\n    \"120/80\",\r\n    \"119/79\",\r\n    \"118/78\",\r\n    \"121/81\",\r\n    \"120/80\",\r\n    \"118/78\",\r\n    \"120/80\",\r\n    \"118/78\",\r\n    \"122/81\",\r\n    \"119/79\",\r\n    \"121/80\",\r\n    \"118/77\",\r\n    \"119/78\",\r\n    \"120/80\",\r\n    \"121/81\",\r\n    \"122/82\",\r\n    \"119/79\",\r\n    \"118/78\",\r\n    \"120/80\",\r\n    \"121/81\",\r\n    \"122/82\",\r\n  ],\r\n  temperature: [\r\n    36.5, 36.6, 36.7, 36.8, 36.9, 36.7, 36.6, 36.5, 36.4, 36.3, 36.5, 36.6,\r\n    36.7, 36.8, 36.9, 36.7, 36.6, 36.5, 36.4, 36.3, 36.5, 36.6, 36.7, 36.8,\r\n    36.9, 36.7, 36.6, 36.5, 36.4, 36.3, 36.5, 36.6, 36.7, 36.8, 36.9, 36.7,\r\n    36.6, 36.5, 36.4, 36.3, 36.5, 36.6, 36.7, 36.8, 36.9,\r\n  ],\r\n  endTidalCO2: [\r\n    38, 39, 40, 41, 42, 40, 39, 38, 37, 36, 38, 39, 40, 41, 42, 40, 39, 38, 37,\r\n    36, 38, 39, 40, 41, 42, 40, 39, 38, 37, 36, 38, 39, 40, 41, 42, 40, 39, 38,\r\n    37, 36, 38, 39, 40, 41, 42,\r\n  ],\r\n  respiratoryRate: [\r\n    18, 17, 19, 18, 16, 17, 18, 19, 20, 18, 17, 16, 15, 17, 18, 19, 20, 18, 17,\r\n    16, 15, 18, 17, 19, 18, 16, 17, 18, 19, 20, 18, 17, 16, 15, 17, 18, 19, 20,\r\n    18, 17, 16, 15, 18, 17, 19,\r\n  ],\r\n};\r\n\r\nexport default sampleVitals;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { Colors, Fonts, Spacing } from \"../Theme\";\r\nimport { LineChart } from \"react-native-chart-kit\";\r\nimport { FontAwesome5, MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport sampleVitals from \"../data/vitalsSampleData\";\r\n\r\nconst VitalBox = ({ label, value, unit, icon }) => (\r\n  <View style={styles.vitalBox}>\r\n    {icon}\r\n    <Text style={styles.label}>{label}</Text>\r\n    <Text style={styles.value}>\r\n      {value} <Text style={styles.unit}>{unit}</Text>\r\n    </Text>\r\n  </View>\r\n);\r\n\r\nconst VitalsDataSection = () => {\r\n  const [currentVitals, setCurrentVitals] = useState({\r\n    heartRate: sampleVitals.heartRate[0],\r\n    oxygenSaturation: sampleVitals.oxygenSaturation[0],\r\n    bloodPressure: sampleVitals.bloodPressure[0],\r\n    temperature: sampleVitals.temperature[0],\r\n    endTidalCO2: sampleVitals.endTidalCO2[0],\r\n    respiratoryRate: sampleVitals.respiratoryRate[0],\r\n  });\r\n\r\n  const [selectedVital, setSelectedVital] = useState(\"heartRate\");\r\n  const [chartData, setChartData] = useState(\r\n    sampleVitals[selectedVital].slice(-10), // Only the last 10 values initially\r\n  );\r\n\r\n  useEffect(() => {\r\n    let index = 0;\r\n\r\n    // Reset chartData to the last 10 values of the selected vital\r\n    setChartData(sampleVitals[selectedVital].slice(-10));\r\n\r\n    const intervalId = setInterval(() => {\r\n      // Update current vitals\r\n      setCurrentVitals({\r\n        heartRate:\r\n          sampleVitals.heartRate[index % sampleVitals.heartRate.length],\r\n        oxygenSaturation:\r\n          sampleVitals.oxygenSaturation[\r\n            index % sampleVitals.oxygenSaturation.length\r\n          ],\r\n        bloodPressure:\r\n          sampleVitals.bloodPressure[index % sampleVitals.bloodPressure.length],\r\n        temperature:\r\n          sampleVitals.temperature[index % sampleVitals.temperature.length],\r\n        endTidalCO2:\r\n          sampleVitals.endTidalCO2[index % sampleVitals.endTidalCO2.length],\r\n        respiratoryRate:\r\n          sampleVitals.respiratoryRate[\r\n            index % sampleVitals.respiratoryRate.length\r\n          ],\r\n      });\r\n\r\n      // Update chart data dynamically\r\n      setChartData((prevChartData) => {\r\n        const newValue =\r\n          sampleVitals[selectedVital][\r\n            index % sampleVitals[selectedVital].length\r\n          ];\r\n        const updatedData = [...prevChartData, newValue].slice(-10); // Keep only the last 10 values\r\n        return updatedData;\r\n      });\r\n\r\n      index += 1;\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [selectedVital]); // Reset data on new vital selection\r\n\r\n  // Function to capitalize words for button labels\r\n  const formatLabel = (label) =>\r\n    label.replace(/([A-Z])/g, \" $1\").replace(/^./, (str) => str.toUpperCase());\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Vital Boxes including Blood Pressure */}\r\n      <View style={styles.vitalsContainer}>\r\n        <VitalBox\r\n          label=\"Heart Rate\"\r\n          value={currentVitals.heartRate}\r\n          unit=\"bpm\"\r\n          icon={<FontAwesome5 name=\"heartbeat\" size={24} color=\"red\" />}\r\n        />\r\n        <VitalBox\r\n          label=\"Oxygen Saturation\"\r\n          value={currentVitals.oxygenSaturation}\r\n          unit=\"%\"\r\n          icon={<MaterialCommunityIcons name=\"water\" size={24} color=\"red\" />}\r\n        />\r\n        <VitalBox\r\n          label=\"Blood Pressure\"\r\n          value={currentVitals.bloodPressure}\r\n          unit=\"mmHg\"\r\n          icon={<FontAwesome5 name=\"syringe\" size={24} color=\"red\" />}\r\n        />\r\n        <VitalBox\r\n          label=\"Temperature\"\r\n          value={currentVitals.temperature}\r\n          unit=\"°C\"\r\n          icon={<FontAwesome5 name=\"thermometer-half\" size={24} color=\"red\" />}\r\n        />\r\n        <VitalBox\r\n          label=\"End Tidal CO₂\"\r\n          value={currentVitals.endTidalCO2}\r\n          unit=\"mmHg\"\r\n          icon={<FontAwesome5 name=\"lungs\" size={24} color=\"red\" />}\r\n        />\r\n        <VitalBox\r\n          label=\"Respiratory Rate\"\r\n          value={currentVitals.respiratoryRate}\r\n          unit=\"bpm\"\r\n          icon={\r\n            <MaterialCommunityIcons name=\"airballoon\" size={24} color=\"red\" />\r\n          }\r\n        />\r\n      </View>\r\n\r\n      {/* Chart Selection Buttons (excluding Blood Pressure) */}\r\n      <View style={styles.selectionContainer}>\r\n        {Object.keys(sampleVitals)\r\n          .filter((vital) => vital !== \"bloodPressure\") // Exclude Blood Pressure from chart options\r\n          .map((vital) => (\r\n            <TouchableOpacity\r\n              key={vital}\r\n              style={[\r\n                styles.selectionButton,\r\n                selectedVital === vital && styles.selectedButton,\r\n              ]}\r\n              onPress={() => setSelectedVital(vital)}\r\n            >\r\n              <Text style={styles.buttonText}>{formatLabel(vital)}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n      </View>\r\n\r\n      {/* Centered Chart */}\r\n      <Text style={styles.chartTitle}>\r\n        {formatLabel(selectedVital)} Over Time\r\n      </Text>\r\n      <View style={styles.chartContainer}>\r\n        <LineChart\r\n          data={{\r\n            labels: [], // Set to empty to hide x-axis labels\r\n            datasets: [{ data: chartData.map((value) => parseFloat(value)) }],\r\n          }}\r\n          width={Dimensions.get(\"window\").width * 0.85} // Set width to 85% of the screen for centering\r\n          height={220}\r\n          chartConfig={{\r\n            backgroundGradientFrom: \"#ffffff\",\r\n            backgroundGradientTo: \"#f0f0f0\",\r\n            color: (opacity = 1) => `rgba(34, 128, 176, ${opacity})`, // Blue line color\r\n            labelColor: () => Colors.text,\r\n            strokeWidth: 3,\r\n            propsForDots: {\r\n              r: \"5\",\r\n              strokeWidth: \"2\",\r\n              stroke: \"#2280B0\",\r\n            },\r\n            propsForBackgroundLines: {\r\n              stroke: \"#e0e0e0\",\r\n            },\r\n          }}\r\n          bezier\r\n          style={styles.chart}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: Spacing.medium,\r\n    backgroundColor: Colors.background,\r\n  },\r\n  vitalsContainer: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: Spacing.medium,\r\n  },\r\n  vitalBox: {\r\n    width: \"45%\",\r\n    padding: Spacing.medium,\r\n    backgroundColor: \"#F8F9FA\",\r\n    marginBottom: Spacing.small,\r\n    borderRadius: 12,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 2,\r\n  },\r\n  label: {\r\n    fontSize: Fonts.size.small,\r\n    color: Colors.text,\r\n    marginTop: Spacing.xs,\r\n  },\r\n  value: {\r\n    fontSize: Fonts.size.large,\r\n    fontWeight: \"bold\",\r\n    color: \"#2280B0\",\r\n  },\r\n  unit: {\r\n    fontSize: Fonts.size.small,\r\n    color: Colors.textLight,\r\n  },\r\n  selectionContainer: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    marginBottom: Spacing.small,\r\n  },\r\n  selectionButton: {\r\n    padding: Spacing.small,\r\n    backgroundColor: \"#FFFFFF\", // Default button color\r\n    borderRadius: 20,\r\n    marginHorizontal: Spacing.small,\r\n    marginBottom: Spacing.small,\r\n    paddingHorizontal: Spacing.medium,\r\n    borderWidth: 1,\r\n    borderColor: \"#E0E0E0\",\r\n  },\r\n  selectedButton: {\r\n    backgroundColor: \"#2280B0\", // Blue color for selected button\r\n  },\r\n  buttonText: {\r\n    fontSize: Fonts.size.small,\r\n    color: Colors.text,\r\n    textTransform: \"capitalize\",\r\n  },\r\n  chartTitle: {\r\n    fontSize: Fonts.size.medium,\r\n    fontWeight: \"bold\",\r\n    color: Colors.text,\r\n    textAlign: \"center\",\r\n    marginVertical: Spacing.small,\r\n    textTransform: \"capitalize\",\r\n  },\r\n  chartContainer: {\r\n    alignItems: \"center\", // Centers the chart within this container\r\n    marginTop: Spacing.medium,\r\n  },\r\n  chart: {\r\n    borderRadius: 12,\r\n  },\r\n});\r\n\r\nexport default VitalsDataSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Button,\r\n  Modal,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\"; // Import icons for custom checkbox\r\nimport { Colors, Fonts, Spacing, Borders } from \"../Theme\";\r\nimport casesData from \"../data/cases_filtered_json.json\";\r\nimport surgeries from \"../data/surgeries.json\";\r\nimport { useSurgery } from \"../context/SurgeryContext\";\r\nimport VitalsDataSection from \"../components/VitalsDataSection\";\r\n\r\n// Custom checkbox component\r\nconst CustomCheckBox = ({ isChecked, onPress, label }) => (\r\n  <TouchableOpacity style={styles.checkBoxItem} onPress={onPress}>\r\n    <MaterialIcons\r\n      name={isChecked ? \"check-box\" : \"check-box-outline-blank\"}\r\n      size={24}\r\n      color={Colors.primary}\r\n    />\r\n    <Text style={styles.checkBoxLabel}>{label}</Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst selectRandomCase = (cases) => {\r\n  const randomIndex = Math.floor(Math.random() * cases.length);\r\n  return cases[randomIndex];\r\n};\r\n\r\nconst DetailedOR = ({ route, navigation }) => {\r\n  const { orId } = route.params;\r\n  const { orData, getSurgerySteps } = useSurgery();\r\n  const or = orData.find((o) => o.id === orId);\r\n\r\n  const [isTechModalVisible, setIsTechModalVisible] = useState(false);\r\n  const [equipmentRequests, setEquipmentRequests] = useState({\r\n    arterialLine: false,\r\n    glidescope: false,\r\n    POCUS: false,\r\n    vascularUltrasound: false,\r\n    CO2Absorber: false,\r\n  });\r\n\r\n  const steps = getSurgerySteps(or.surgeryType);\r\n  const currentStepIndex = steps.indexOf(or.surgeryStage);\r\n\r\n  const getCompletionPercentage = (surgeryType, currentStep) => {\r\n    const surgery = surgeries.find((s) => s.surgeryType === surgeryType);\r\n    if (surgery) {\r\n      const totalSteps = surgery.steps.length;\r\n      const currentStepIndex = surgery.steps.indexOf(currentStep) + 1;\r\n      const percentage = (currentStepIndex / totalSteps) * 100;\r\n      return `${percentage.toFixed(0)}% Complete (Stage ${currentStepIndex}/${totalSteps})`;\r\n    }\r\n    return \"0% Complete\";\r\n  };\r\n\r\n  const [surgeryInfo, setSurgeryInfo] = useState(selectRandomCase(casesData));\r\n  const opStart = surgeryInfo.opstart;\r\n  const [operationStartTime, setOperationStartTime] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const currentTime = new Date();\r\n    const opStartDate = new Date(currentTime.getTime() - opStart * 1000);\r\n    const opStartString = opStartDate.toLocaleTimeString([], {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n    setOperationStartTime(opStartString);\r\n  }, [surgeryInfo.opstart]);\r\n\r\n  const formatLabel = (label) =>\r\n    label.replace(/([A-Z])/g, \" $1\").replace(/^./, (str) => str.toUpperCase());\r\n\r\n  const handleSubmitRequest = () => {\r\n    const selectedRequests = Object.keys(equipmentRequests).filter(\r\n      (item) => equipmentRequests[item],\r\n    );\r\n    Alert.alert(\r\n      \"Request Submitted\",\r\n      `Equipment requested: ${selectedRequests.join(\", \")}`,\r\n    );\r\n    setIsTechModalVisible(false); // Close the modal after submitting\r\n  };\r\n\r\n  const handleEmergencyAlert = async () => {\r\n    try {\r\n      const response = await fetch(\"http://10.0.0.55:8081/send-notification\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          title: \"Emergency Alert!\",\r\n          body: `Emergency in Operating Room Number ${or.id}!`,\r\n          data: { orId: or.id },\r\n          priority: \"high\",\r\n        }),\r\n      });\r\n      console.log(\"Emergency notification sent:\", response);\r\n    } catch (error) {\r\n      console.error(\"Error sending emergency notification:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.scrollView}>\r\n      <View style={styles.container}>\r\n        {/* Display OR and surgery details */}\r\n        <View style={styles.detailBox}>\r\n          <Text style={styles.title}>{or.id}</Text>\r\n          <Text style={styles.detailText}>Surgeon Name: {or.surgeonName}</Text>\r\n          <Text style={styles.detailText}>\r\n            {or.replacement\r\n              ? `Anesthesia: ${or.raName} (${or.shift}) → ${or.replacement.name} (${or.replacement.shift})`\r\n              : `Anesthesia: ${or.raName} (${or.shift}) → finish case`}\r\n          </Text>\r\n          <Text style={styles.detailText}>Surgery Type: {or.surgeryType}</Text>\r\n          <Text style={styles.detailText}>\r\n            Surgery Stage: {or.surgeryStage}\r\n          </Text>\r\n          <Text style={styles.detailText}>\r\n            Surgery Progression:{\" \"}\r\n            {getCompletionPercentage(or.surgeryType, or.surgeryStage)}\r\n          </Text>\r\n          <Text style={styles.detailText}>\r\n            Operation Start Time: {operationStartTime}\r\n          </Text>\r\n        </View>\r\n\r\n        {/* Vitals Section */}\r\n        <VitalsDataSection />\r\n\r\n        {/* Button Section with consistent spacing */}\r\n        <View style={styles.buttonWrapper}>\r\n          {/* Surgery Progression Button */}\r\n          <TouchableOpacity\r\n            style={[styles.baseButton, styles.primaryButton]}\r\n            onPress={() => navigation.navigate(\"PushNotifications\", { or: or })}\r\n          >\r\n            <Text style={styles.buttonText}>Surgery Progression</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Anesthesia Tech Button */}\r\n          <TouchableOpacity\r\n            style={[styles.baseButton, styles.primaryButton]}\r\n            onPress={() => setIsTechModalVisible(true)}\r\n          >\r\n            <Text style={styles.buttonText}>Anesthesia Tech</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Emergency Button */}\r\n          <TouchableOpacity\r\n            style={[styles.baseButton, styles.emergencyButton]}\r\n            onPress={handleEmergencyAlert}\r\n          >\r\n            <Text style={styles.buttonText}>Emergency in OR</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* Modal for Tech Options */}\r\n        <Modal\r\n          visible={isTechModalVisible}\r\n          transparent={true}\r\n          animationType=\"slide\"\r\n          onRequestClose={() => setIsTechModalVisible(false)}\r\n        >\r\n          <View style={styles.modalContainer}>\r\n            <View style={styles.modalContent}>\r\n              <Text style={styles.modalTitle}>Anesthesia Tech Options</Text>\r\n\r\n              {/* Call Tech Button */}\r\n              <TouchableOpacity\r\n                style={[styles.baseButton, styles.secondaryButton]}\r\n              >\r\n                <Text style={styles.buttonText}>Call Tech</Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* Quick Request Section */}\r\n              <Text style={styles.quickRequestTitle}>Quick Request:</Text>\r\n              <View style={styles.checkBoxContainer}>\r\n                {Object.keys(equipmentRequests).map((item) => (\r\n                  <CustomCheckBox\r\n                    key={item}\r\n                    label={formatLabel(item)}\r\n                    isChecked={equipmentRequests[item]}\r\n                    onPress={() =>\r\n                      setEquipmentRequests((prevState) => ({\r\n                        ...prevState,\r\n                        [item]: !prevState[item],\r\n                      }))\r\n                    }\r\n                  />\r\n                ))}\r\n              </View>\r\n\r\n              {/* Submit Request Button */}\r\n              <TouchableOpacity\r\n                style={[styles.baseButton, styles.primaryButton]}\r\n                onPress={handleSubmitRequest}\r\n              >\r\n                <Text style={styles.buttonText}>Submit Request</Text>\r\n              </TouchableOpacity>\r\n\r\n              <Button\r\n                title=\"Close\"\r\n                onPress={() => setIsTechModalVisible(false)}\r\n              />\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        <TouchableOpacity\r\n          style={[styles.baseButton, styles.secondaryButton]}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <Text style={styles.buttonText}>Go Back</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollView: {\r\n    backgroundColor: Colors.background,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.background,\r\n    padding: Spacing.medium,\r\n  },\r\n  detailBox: {\r\n    backgroundColor: Colors.cardBackground,\r\n    borderRadius: Borders.radius.medium,\r\n    padding: Spacing.medium,\r\n    marginVertical: Spacing.small,\r\n    shadowColor: Colors.shadow,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n  },\r\n  title: {\r\n    fontSize: Fonts.size.large,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n    marginBottom: Spacing.small,\r\n  },\r\n  detailText: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.regular,\r\n    color: Colors.text,\r\n    marginBottom: Spacing.xs,\r\n  },\r\n  buttonText: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n  },\r\n  baseButton: {\r\n    borderRadius: Borders.radius.medium,\r\n    paddingVertical: Spacing.medium,\r\n    alignItems: \"center\",\r\n    marginBottom: Spacing.small, // Consistent spacing\r\n    width: \"100%\",\r\n  },\r\n  primaryButton: {\r\n    backgroundColor: Colors.primary, // Primary color for standard buttons\r\n  },\r\n  secondaryButton: {\r\n    backgroundColor: Colors.secondary, // Secondary color for \"Go Back\" button\r\n  },\r\n  emergencyButton: {\r\n    backgroundColor: \"red\", // Red color for emergency button\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  modalContent: {\r\n    width: \"80%\",\r\n    backgroundColor: \"#FFF\",\r\n    padding: Spacing.medium,\r\n    borderRadius: Borders.radius.medium,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  modalTitle: {\r\n    fontSize: Fonts.size.large,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n    marginBottom: Spacing.small,\r\n    textAlign: \"center\",\r\n  },\r\n  callButton: {\r\n    backgroundColor: Colors.secondary,\r\n    borderRadius: Borders.radius.medium,\r\n    paddingVertical: Spacing.medium,\r\n    alignItems: \"center\",\r\n    marginVertical: Spacing.small,\r\n  },\r\n  quickRequestTitle: {\r\n    fontSize: Fonts.size.large,\r\n    fontFamily: Fonts.family.bold,\r\n    marginBottom: Spacing.small,\r\n    color: Colors.primary,\r\n  },\r\n  checkBoxContainer: {\r\n    marginVertical: Spacing.small,\r\n  },\r\n  checkBoxItem: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: Spacing.xs,\r\n  },\r\n  checkBoxLabel: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n    marginLeft: Spacing.small,\r\n    textTransform: \"capitalize\",\r\n  },\r\n  submitButton: {\r\n    backgroundColor: Colors.primary,\r\n    borderRadius: Borders.radius.medium,\r\n    paddingVertical: Spacing.medium,\r\n    alignItems: \"center\",\r\n    marginVertical: Spacing.small,\r\n  },\r\n  buttonWrapper: {\r\n    marginVertical: Spacing.medium,\r\n  },\r\n});\r\n\r\nexport default DetailedOR;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nimport { API_KEY } from \"./config\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: API_KEY,\r\n  authDomain: \"uw-anesthesiology-app.firebaseapp.com\",\r\n  projectId: \"uw-anesthesiology-app\",\r\n  storageBucket: \"uw-anesthesiology-app.appspot.com\",\r\n  messagingSenderId: \"214251480359\",\r\n  appId: \"1:214251480359:web:c56c4c97bf0f98f23db502\",\r\n  measurementId: \"G-Y13V44ZWWP\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\r\nexport { db };\r\n","export const API_KEY = \"AIzaSyBvMQ84FvejerpIaAo9JBiuhK7vZyvngls\";","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ScrollView,\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { Checkbox } from \"react-native-paper\";\r\nimport { collection, getDocs, doc, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"../services/firebase\";\r\nimport { Colors, Fonts, Spacing, Borders } from \"../Theme\"; // Import theme variables\r\n\r\nconst PACUScreen = () => {\r\n  const [pacuPatients, setPacuPatients] = useState([]);\r\n\r\n  // Fetch PACU patients from Firebase\r\n  useEffect(() => {\r\n    const fetchPacuPatients = async () => {\r\n      try {\r\n        const patientsCollection = collection(db, \"PACU\", \"People\", \"Patients\");\r\n        const querySnapshot = await getDocs(patientsCollection);\r\n        const patientsData = querySnapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setPacuPatients(patientsData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching PACU patients data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPacuPatients();\r\n  }, []);\r\n\r\n  // Toggle discharge readiness for a patient\r\n  const toggleDischargeReadiness = async (id) => {\r\n    const currentStatus = pacuPatients.find(\r\n      (patient) => patient.id === id,\r\n    ).readyfordischarge;\r\n\r\n    try {\r\n      const patientDocRef = doc(db, \"PACU\", \"People\", \"Patients\", id);\r\n      await updateDoc(patientDocRef, {\r\n        readyfordischarge: !currentStatus,\r\n      });\r\n\r\n      setPacuPatients((prevPatients) =>\r\n        prevPatients.map((patient) =>\r\n          patient.id === id\r\n            ? { ...patient, readyfordischarge: !patient.readyfordischarge }\r\n            : patient,\r\n        ),\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error updating discharge status:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Text style={styles.tableTitle}>PACU Patients</Text>\r\n      {pacuPatients.map((patient) => (\r\n        <View style={styles.patientRow} key={patient.id}>\r\n          <View style={styles.patientDetails}>\r\n            <Text style={styles.patientName}>{patient.name}</Text>\r\n            <Text style={styles.patientInfo}>MRN: {patient.mrn}</Text>\r\n            <Text style={styles.patientInfo}>DOB: {patient.dob}</Text>\r\n            <Text style={styles.anesthesiaInfo}>\r\n              Anesthesiologist: {patient.anesthesiologist} ({patient.shift})\r\n            </Text>\r\n          </View>\r\n          <TouchableOpacity\r\n            style={styles.checkboxContainer}\r\n            onPress={() => toggleDischargeReadiness(patient.id)}\r\n          >\r\n            <Text style={styles.dischargeLabel}>Ready for Discharge</Text>\r\n            <Checkbox\r\n              status={patient.readyfordischarge ? \"checked\" : \"unchecked\"}\r\n              color={patient.readyfordischarge ? Colors.success : Colors.error}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n      ))}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.background,\r\n    padding: Spacing.medium,\r\n  },\r\n  tableTitle: {\r\n    fontSize: Fonts.size.large,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n    marginBottom: Spacing.small,\r\n    textAlign: \"center\",\r\n  },\r\n  patientRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: Colors.cardBackground,\r\n    padding: Spacing.medium,\r\n    marginBottom: Spacing.small,\r\n    borderRadius: Borders.radius.medium,\r\n    shadowColor: Colors.shadow,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 6,\r\n    elevation: 4,\r\n    borderWidth: 1,\r\n    borderColor: Colors.border,\r\n  },\r\n  patientDetails: {\r\n    flex: 2,\r\n    paddingRight: Spacing.small,\r\n  },\r\n  patientName: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n    marginBottom: Spacing.xs,\r\n  },\r\n  patientInfo: {\r\n    fontSize: Fonts.size.small,\r\n    fontFamily: Fonts.family.regular,\r\n    color: Colors.textLight,\r\n    marginBottom: Spacing.xs,\r\n  },\r\n  anesthesiaInfo: {\r\n    fontSize: Fonts.size.small,\r\n    fontFamily: Fonts.family.regular,\r\n    color: Colors.secondary,\r\n    marginTop: Spacing.xs,\r\n  },\r\n  checkboxContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    backgroundColor: Colors.lightBackground, // Optional lighter background\r\n    padding: Spacing.small,\r\n    borderRadius: Borders.radius.small,\r\n  },\r\n  dischargeLabel: {\r\n    fontSize: Fonts.size.small,\r\n    fontFamily: Fonts.family.bold,\r\n    marginRight: Spacing.xs,\r\n    color: Colors.text,\r\n  },\r\n});\r\n\r\nexport default PACUScreen;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Switch,\r\n  TouchableOpacity,\r\n  Modal,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport { Colors, Fonts, Spacing, Borders } from \"../Theme\"; // Import theme variables\r\n\r\nconst convertTo24Hour = (time) => {\r\n  const [hourMinute, modifier] = time.split(\" \");\r\n  let [hours, minutes] = hourMinute.split(\":\");\r\n  if (hours === \"12\") {\r\n    hours = \"00\";\r\n  }\r\n  if (modifier === \"PM\") {\r\n    hours = parseInt(hours, 10) + 12;\r\n  }\r\n  return `${hours}:${minutes}`;\r\n};\r\n\r\nconst RegionalScreen = () => {\r\n  const [consultRequests, setConsultRequests] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"John Doe\",\r\n      mrn: \"123456\",\r\n      dob: \"Jan 15, 1980\",\r\n      procedure: \"Femoral Nerve Block\",\r\n      time: \"10:30 AM\",\r\n      urgent: false,\r\n      requestingPhysician: \"Dr. Green\",\r\n      assignedClinician: \"\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Jane Smith\",\r\n      mrn: \"654321\",\r\n      dob: \"Mar 22, 1975\",\r\n      procedure: \"Sciatic Nerve Block\",\r\n      time: \"11:00 AM\",\r\n      urgent: true,\r\n      requestingPhysician: \"Dr. White\",\r\n      assignedClinician: \"\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Mike Johnson\",\r\n      mrn: \"789123\",\r\n      dob: \"Jul 10, 1990\",\r\n      procedure: \"Interscalene Block\",\r\n      time: \"9:15 AM\",\r\n      urgent: false,\r\n      requestingPhysician: \"Dr. Adams\",\r\n      assignedClinician: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Emily Brown\",\r\n      mrn: \"456789\",\r\n      dob: \"Oct 5, 1982\",\r\n      procedure: \"Axillary Nerve Block\",\r\n      time: \"8:00 AM\",\r\n      urgent: true,\r\n      requestingPhysician: \"Dr. Brown\",\r\n      assignedClinician: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [anesthesiologists] = useState([\r\n    { name: \"Dr. Lee\", available: true },\r\n    { name: \"Dr. Adams\", available: false },\r\n    { name: \"Dr. Jones\", available: true },\r\n    { name: \"Dr. Smith\", available: false },\r\n  ]);\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [selectedConsultId, setSelectedConsultId] = useState(null);\r\n  const [sortField, setSortField] = useState(\"time\");\r\n\r\n  const toggleUrgency = (id) => {\r\n    setConsultRequests((prevConsults) =>\r\n      prevConsults.map((consult) =>\r\n        consult.id === id ? { ...consult, urgent: !consult.urgent } : consult,\r\n      ),\r\n    );\r\n  };\r\n\r\n  const selectClinician = (clinician) => {\r\n    setConsultRequests((prevConsults) =>\r\n      prevConsults.map((consult) =>\r\n        consult.id === selectedConsultId\r\n          ? { ...consult, assignedClinician: clinician }\r\n          : consult,\r\n      ),\r\n    );\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const sortConsults = (field) => {\r\n    const sortedConsults = [...consultRequests].sort((a, b) => {\r\n      if (field === \"time\") {\r\n        return (\r\n          new Date(`1970-01-01T${convertTo24Hour(a.time)}`) -\r\n          new Date(`1970-01-01T${convertTo24Hour(b.time)}`)\r\n        );\r\n      } else if (field === \"urgent\") {\r\n        return a.urgent === b.urgent ? 0 : a.urgent ? -1 : 1;\r\n      }\r\n    });\r\n    setSortField(field);\r\n    setConsultRequests(sortedConsults);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.sortingButtons}>\r\n        <TouchableOpacity onPress={() => sortConsults(\"time\")}>\r\n          <Text\r\n            style={[\r\n              styles.sortButton,\r\n              sortField === \"time\" && styles.activeSortButton,\r\n            ]}\r\n          >\r\n            Sort by Time\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => sortConsults(\"urgent\")}>\r\n          <Text\r\n            style={[\r\n              styles.sortButton,\r\n              sortField === \"urgent\" && styles.activeSortButton,\r\n            ]}\r\n          >\r\n            Sort by Urgency\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <ScrollView>\r\n        {consultRequests.map((consult) => (\r\n          <View style={styles.consultRow} key={consult.id}>\r\n            <View style={styles.consultDetails}>\r\n              <Text style={styles.consultName}>{consult.name}</Text>\r\n              <Text style={styles.consultInfo}>MRN: {consult.mrn}</Text>\r\n              <Text style={styles.consultInfo}>DOB: {consult.dob}</Text>\r\n              <Text style={styles.consultInfo}>\r\n                Procedure: {consult.procedure}\r\n              </Text>\r\n              <Text style={styles.consultInfo}>\r\n                Time of Request: {convertTo24Hour(consult.time)}\r\n              </Text>\r\n              <Text style={styles.consultInfo}>\r\n                Requesting Physician: {consult.requestingPhysician}\r\n              </Text>\r\n              <TouchableOpacity\r\n                style={styles.assignedClinicianBtn}\r\n                onPress={() => {\r\n                  setSelectedConsultId(consult.id);\r\n                  setModalVisible(true);\r\n                }}\r\n              >\r\n                <Text style={styles.consultInfo}>\r\n                  Assigned Clinician:{\" \"}\r\n                  {consult.assignedClinician ? (\r\n                    consult.assignedClinician\r\n                  ) : (\r\n                    <Text style={styles.selectText}>Select</Text>\r\n                  )}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.urgentSwitch}>\r\n              <Text style={styles.urgentLabel}>Urgent</Text>\r\n              <Switch\r\n                value={consult.urgent}\r\n                onValueChange={() => toggleUrgency(consult.id)}\r\n                trackColor={{ false: Colors.border, true: Colors.secondary }}\r\n                thumbColor={\r\n                  consult.urgent ? Colors.secondary : Colors.lightBackground\r\n                }\r\n              />\r\n            </View>\r\n          </View>\r\n        ))}\r\n\r\n        <View style={styles.anesthesiologistsSection}>\r\n          <Text style={styles.anesthesiologistsTitle}>Anesthesiologists</Text>\r\n          {anesthesiologists.map((anesthesiologist, index) => (\r\n            <View key={index} style={styles.anesthesiologistRow}>\r\n              <Text\r\n                style={[\r\n                  styles.anesthesiologistName,\r\n                  anesthesiologist.available ? styles.available : styles.busy,\r\n                ]}\r\n              >\r\n                {anesthesiologist.name} (\r\n                {anesthesiologist.available ? \"Available\" : \"Busy\"})\r\n              </Text>\r\n            </View>\r\n          ))}\r\n        </View>\r\n      </ScrollView>\r\n\r\n      <Modal\r\n        visible={modalVisible}\r\n        transparent={true}\r\n        animationType=\"slide\"\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>Select Assigned Clinician</Text>\r\n            <FlatList\r\n              data={anesthesiologists}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={[\r\n                    styles.modalItem,\r\n                    !item.available && {\r\n                      backgroundColor: Colors.lightBackground,\r\n                    },\r\n                  ]}\r\n                  onPress={() => item.available && selectClinician(item.name)}\r\n                  disabled={!item.available}\r\n                >\r\n                  <Text\r\n                    style={[\r\n                      styles.modalItemText,\r\n                      !item.available && { color: Colors.textLight },\r\n                    ]}\r\n                  >\r\n                    {item.name} {item.available ? \"\" : \"(Busy)\"}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              )}\r\n              keyExtractor={(item, index) => index.toString()}\r\n            />\r\n            <TouchableOpacity\r\n              style={styles.closeButton}\r\n              onPress={() => setModalVisible(false)}\r\n            >\r\n              <Text style={styles.closeButtonText}>Close</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: Spacing.medium,\r\n    backgroundColor: Colors.background,\r\n  },\r\n  consultRow: {\r\n    backgroundColor: Colors.cardBackground,\r\n    padding: Spacing.medium,\r\n    marginVertical: Spacing.small,\r\n    borderRadius: Borders.radius.medium,\r\n    elevation: 3,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  consultDetails: { flex: 1 },\r\n  consultName: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n  },\r\n  consultInfo: {\r\n    fontSize: Fonts.size.small,\r\n    fontFamily: Fonts.family.regular,\r\n    color: Colors.textLight,\r\n  },\r\n  urgentSwitch: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n  urgentLabel: {\r\n    marginRight: Spacing.xs,\r\n    fontWeight: \"bold\",\r\n    color: Colors.text,\r\n  },\r\n  sortingButtons: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: Spacing.medium,\r\n  },\r\n  sortButton: {\r\n    fontSize: Fonts.size.small,\r\n    color: Colors.secondary,\r\n    fontFamily: Fonts.family.bold,\r\n  },\r\n  activeSortButton: { textDecorationLine: \"underline\" },\r\n  anesthesiologistsSection: { marginTop: Spacing.large },\r\n  anesthesiologistsTitle: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n    marginBottom: Spacing.small,\r\n  },\r\n  anesthesiologistRow: { paddingVertical: Spacing.xs },\r\n  anesthesiologistName: { fontSize: Fonts.size.small },\r\n  available: { color: Colors.success },\r\n  busy: { color: Colors.error },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  modalContent: {\r\n    width: 300,\r\n    backgroundColor: Colors.cardBackground,\r\n    borderRadius: Borders.radius.medium,\r\n    padding: Spacing.medium,\r\n  },\r\n  modalTitle: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n    marginBottom: Spacing.medium,\r\n  },\r\n  modalItem: {\r\n    padding: Spacing.small,\r\n    borderBottomWidth: 1,\r\n    borderColor: Colors.border,\r\n  },\r\n  modalItemText: { fontSize: Fonts.size.small },\r\n  closeButton: { marginTop: Spacing.medium, alignItems: \"center\" },\r\n  closeButtonText: { color: Colors.secondary, fontFamily: Fonts.family.bold },\r\n\r\n  selectText: { color: Colors.secondary, fontFamily: Fonts.family.bold },\r\n});\r\n\r\nexport default RegionalScreen;\r\n","import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, ScrollView } from \"react-native\";\r\nimport { Checkbox } from \"react-native-paper\";\r\nimport {\r\n  Colors,\r\n  Fonts,\r\n  Spacing,\r\n  Borders,\r\n  Shadows,\r\n  ButtonStyles,\r\n} from \"../Theme\";\r\n\r\nconst AcutePainScreen = () => {\r\n  const [patients, setPatients] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"John Doe\",\r\n      mrn: \"123456\",\r\n      dob: \"Jan 15, 1980\",\r\n      seenToday: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Jane Smith\",\r\n      mrn: \"654321\",\r\n      dob: \"Mar 22, 1975\",\r\n      seenToday: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Michael Brown\",\r\n      mrn: \"789123\",\r\n      dob: \"Jul 10, 1990\",\r\n      seenToday: true,\r\n    },\r\n  ]);\r\n\r\n  const [newConsults, setNewConsults] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"Emily Johnson\",\r\n      mrn: \"456789\",\r\n      dob: \"Oct 5, 1982\",\r\n      procedure: \"Nerve Block\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"William Lee\",\r\n      mrn: \"987654\",\r\n      dob: \"Dec 19, 1987\",\r\n      procedure: \"Epidural Injection\",\r\n    },\r\n  ]);\r\n\r\n  const toggleSeenToday = (id) => {\r\n    setPatients((prevPatients) =>\r\n      prevPatients.map((patient) =>\r\n        patient.id === id\r\n          ? { ...patient, seenToday: !patient.seenToday }\r\n          : patient,\r\n      ),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Text style={styles.sectionTitle}>Current Patients</Text>\r\n      {patients.map((patient) => (\r\n        <View key={patient.id} style={styles.patientRow}>\r\n          <View style={styles.patientDetails}>\r\n            <Text style={styles.patientName}>{patient.name}</Text>\r\n            <Text style={styles.patientInfo}>MRN: {patient.mrn}</Text>\r\n            <Text style={styles.patientInfo}>DOB: {patient.dob}</Text>\r\n          </View>\r\n          <View style={styles.checkboxContainer}>\r\n            <Text style={styles.checkboxLabel}>Seen Today</Text>\r\n            <Checkbox\r\n              status={patient.seenToday ? \"checked\" : \"unchecked\"}\r\n              onPress={() => toggleSeenToday(patient.id)}\r\n              color={Colors.primary} // Consistent checkbox color from theme\r\n            />\r\n          </View>\r\n        </View>\r\n      ))}\r\n\r\n      <Text style={styles.sectionTitle}>New Consults</Text>\r\n      {newConsults.map((consult) => (\r\n        <View key={consult.id} style={styles.consultRow}>\r\n          <Text style={styles.consultName}>{consult.name}</Text>\r\n          <Text style={styles.consultInfo}>MRN: {consult.mrn}</Text>\r\n          <Text style={styles.consultInfo}>DOB: {consult.dob}</Text>\r\n          <Text style={styles.consultProcedure}>\r\n            Procedure: {consult.procedure}\r\n          </Text>\r\n        </View>\r\n      ))}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: Spacing.medium,\r\n    backgroundColor: Colors.background,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: Fonts.size.large,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.text,\r\n    marginBottom: Spacing.small,\r\n  },\r\n  patientRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: Colors.cardBackground,\r\n    padding: Spacing.medium,\r\n    borderRadius: Borders.radius.medium,\r\n    marginBottom: Spacing.small,\r\n    ...Shadows, // Apply shadow styles from theme\r\n  },\r\n  patientDetails: {\r\n    flex: 1,\r\n  },\r\n  patientName: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n  },\r\n  patientInfo: {\r\n    fontSize: Fonts.size.small,\r\n    fontFamily: Fonts.family.regular,\r\n    color: Colors.textLight,\r\n  },\r\n  checkboxContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  checkboxLabel: {\r\n    fontSize: Fonts.size.small,\r\n    marginRight: Spacing.small,\r\n    color: Colors.text,\r\n    fontFamily: Fonts.family.bold,\r\n  },\r\n  consultRow: {\r\n    backgroundColor: Colors.cardBackground,\r\n    padding: Spacing.medium,\r\n    borderRadius: Borders.radius.medium,\r\n    marginBottom: Spacing.small,\r\n    ...Shadows, // Apply shadow styles from theme\r\n  },\r\n  consultName: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n  },\r\n  consultInfo: {\r\n    fontSize: Fonts.size.small,\r\n    fontFamily: Fonts.family.regular,\r\n    color: Colors.textLight,\r\n  },\r\n  consultProcedure: {\r\n    fontSize: Fonts.size.small,\r\n    fontFamily: Fonts.family.italic,\r\n    color: Colors.secondary,\r\n  },\r\n});\r\n\r\nexport default AcutePainScreen;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { Checkbox } from \"react-native-paper\";\r\nimport { Colors, Fonts, Spacing, Borders } from \"../Theme\"; // Import theme variables\r\n\r\nconst EpiduralsTab = () => {\r\n  const [requests, setRequests] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"Emily Johnson\",\r\n      procedure: \"Epidural\",\r\n      time: \"10:00 AM\",\r\n      requestingPhysician: \"Dr. White\",\r\n      completed: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Michael Brown\",\r\n      procedure: \"Epidural\",\r\n      time: \"12:00 PM\",\r\n      requestingPhysician: \"Dr. Green\",\r\n      completed: false,\r\n    },\r\n  ]);\r\n\r\n  const toggleCompletion = (id) => {\r\n    setRequests((prevRequests) =>\r\n      prevRequests.map((request) =>\r\n        request.id === id\r\n          ? { ...request, completed: !request.completed }\r\n          : request,\r\n      ),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Text style={styles.header}>Epidural Requests</Text>\r\n      {requests.map((request) => (\r\n        <View key={request.id} style={styles.requestItem}>\r\n          <View>\r\n            <Text style={styles.name}>{request.name}</Text>\r\n            <Text style={styles.details}>Procedure: {request.procedure}</Text>\r\n            <Text style={styles.details}>Time: {request.time}</Text>\r\n            <Text style={styles.details}>\r\n              Requesting Physician: {request.requestingPhysician}\r\n            </Text>\r\n          </View>\r\n          <Checkbox\r\n            status={request.completed ? \"checked\" : \"unchecked\"}\r\n            onPress={() => toggleCompletion(request.id)}\r\n            color={Colors.primary} // Use primary color from theme for checked color\r\n          />\r\n        </View>\r\n      ))}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: Spacing.medium,\r\n    backgroundColor: Colors.background,\r\n  },\r\n  header: {\r\n    fontSize: Fonts.size.large,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n    marginBottom: Spacing.small,\r\n  },\r\n  requestItem: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: Spacing.medium,\r\n    backgroundColor: Colors.cardBackground,\r\n    marginVertical: Spacing.xs,\r\n    borderRadius: Borders.radius.medium,\r\n    shadowColor: Colors.shadow,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  name: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n  },\r\n  details: {\r\n    fontSize: Fonts.size.small,\r\n    fontFamily: Fonts.family.regular,\r\n    color: Colors.textLight,\r\n  },\r\n});\r\n\r\nexport default EpiduralsTab;\r\n","import React, { createContext, useContext, useState } from \"react\";\r\nimport obstetricsData from \"../data/obstetricsData.json\";\r\n\r\nconst ObstetricsContext = createContext();\r\n\r\nexport const useObstetrics = () => useContext(ObstetricsContext);\r\n\r\nexport const ObstetricsProvider = ({ children }) => {\r\n  const [obCases, setObCases] = useState(\r\n    obstetricsData.map((caseItem) => ({\r\n      ...caseItem,\r\n      currentStep: caseItem.steps[0], // Start with the first step\r\n    })),\r\n  );\r\n\r\n  const getSteps = (caseId) => {\r\n    const obCase = obCases.find((c) => c.id === caseId);\r\n    return obCase ? obCase.steps : [];\r\n  };\r\n\r\n  const updateCaseStep = (caseId) => {\r\n    setObCases((prevCases) =>\r\n      prevCases.map((obCase) => {\r\n        if (obCase.id === caseId) {\r\n          const nextStepIndex = obCase.steps.indexOf(obCase.currentStep) + 1;\r\n          const newStep = obCase.steps[nextStepIndex] || obCase.currentStep;\r\n          return { ...obCase, currentStep: newStep };\r\n        }\r\n        return obCase;\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCompletionPercentage = (caseId) => {\r\n    const obCase = obCases.find((c) => c.id === caseId);\r\n    if (obCase) {\r\n      const totalSteps = obCase.steps.length;\r\n      const currentStepIndex = obCase.steps.indexOf(obCase.currentStep) + 1;\r\n      const percentage = (currentStepIndex / totalSteps) * 100;\r\n      return `${percentage.toFixed(0)}% Complete (Stage ${currentStepIndex}/${totalSteps})`;\r\n    }\r\n    return \"0% Complete\";\r\n  };\r\n\r\n  return (\r\n    <ObstetricsContext.Provider\r\n      value={{ obCases, getSteps, updateCaseStep, getCompletionPercentage }}\r\n    >\r\n      {children}\r\n    </ObstetricsContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useObstetrics } from \"../context/ObstetricsContext\";\r\nimport { Colors, Fonts, Spacing, Borders } from \"../Theme\"; // Import theme variables\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\nconst cardWidth = width * 0.9; // Set the card width to 90% of the screen width\r\n\r\nconst DeliveriesTab = () => {\r\n  const { obCases, getSteps, getCompletionPercentage } = useObstetrics();\r\n  const navigation = useNavigation();\r\n\r\n  const renderItem = ({ item }) => {\r\n    const steps = getSteps(item.id); // Retrieve steps for each case\r\n    const completionText = getCompletionPercentage(item.id); // Get progression percentage\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        style={styles.card}\r\n        onPress={() =>\r\n          navigation.navigate(\"DetailedObstetrics\", { caseId: item.id })\r\n        }\r\n      >\r\n        <Text style={styles.cardTitle}>\r\n          Room {item.roomNumber}: {item.caseType}\r\n        </Text>\r\n        <Text style={styles.cardContent}>Patient: {item.patientName}</Text>\r\n        <Text style={styles.cardContent}>Doctor: {item.doctorName}</Text>\r\n        <Text style={styles.cardContent}>Status: {item.status}</Text>\r\n        <Text style={styles.cardContent}>Type: {item.caseType}</Text>\r\n        <Text style={styles.cardContent}>Progression: {completionText}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={obCases}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id}\r\n        contentContainerStyle={styles.contentContainer}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: Colors.background, // Match background color with ORDashboard\r\n  },\r\n  card: {\r\n    backgroundColor: Colors.cardBackground, // Match card background color\r\n    borderRadius: Borders.radius.medium,\r\n    padding: Spacing.medium,\r\n    marginVertical: Spacing.small,\r\n    width: cardWidth,\r\n    shadowColor: Colors.shadow,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  cardTitle: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary, // Match primary color for title\r\n    marginBottom: Spacing.xs,\r\n  },\r\n  cardContent: {\r\n    fontSize: Fonts.size.small,\r\n    fontFamily: Fonts.family.regular,\r\n    color: Colors.textLight, // Match light text color for content\r\n    marginBottom: Spacing.xs,\r\n  },\r\n  contentContainer: {\r\n    paddingTop: Spacing.large,\r\n    paddingBottom: Spacing.large,\r\n  },\r\n});\r\n\r\nexport default DeliveriesTab;\r\n","import React from \"react\";\r\nimport { SafeAreaView, StyleSheet } from \"react-native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport EpiduralsTab from \"./EpiduralsTab\";\r\nimport DeliveriesTab from \"./DeliveriesTab\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { Colors, Fonts, Spacing } from \"../Theme\"; // Import theme variables\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\n// Tab bar options moved to a constant for readability and reusability\r\nconst tabBarOptions = {\r\n  tabBarActiveTintColor: Colors.primary,\r\n  tabBarInactiveTintColor: Colors.textLight,\r\n  tabBarLabelStyle: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n    paddingBottom: Spacing.small,\r\n  },\r\n  tabBarStyle: {\r\n    height: 70,\r\n    paddingBottom: Spacing.small,\r\n    paddingTop: Spacing.xs,\r\n    backgroundColor: Colors.background,\r\n  },\r\n};\r\n\r\nconst ObstetricsScreen = () => (\r\n  <SafeAreaView style={styles.container}>\r\n    <Tab.Navigator screenOptions={tabBarOptions}>\r\n      <Tab.Screen\r\n        name=\"Epidurals\"\r\n        component={EpiduralsTab}\r\n        options={{\r\n          tabBarLabel: \"Epidurals\",\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons name=\"medkit\" color={color} size={size + 5} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Deliveries\"\r\n        component={DeliveriesTab}\r\n        options={{\r\n          tabBarLabel: \"Deliveries\",\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons name=\"body\" color={color} size={size + 5} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  </SafeAreaView>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.background, // Background color from theme\r\n  },\r\n});\r\n\r\nexport default ObstetricsScreen;\r\n","import React from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { Avatar, Button } from \"react-native-elements\";\r\n\r\nconst ProfileScreen = () => {\r\n  // Dummy data for the user\r\n  const user = {\r\n    name: \"Jordan Vogel\",\r\n    email: \"jvogel33@uw.edu\",\r\n    avatarUrl:\r\n      \"https://media.licdn.com/dms/image/D5603AQFmUSc7eE6kiw/profile-displayphoto-shrink_800_800/0/1707021977294?e=2147483647&v=beta&t=SnfXi2bwnn9pv-nzbbu8fJQQIfJl5tH_ivfote_JklM\", // Placeholder avatar image\r\n  };\r\n\r\n  // Dummy function for logging out of profile\r\n  const handleLogout = () => {\r\n    console.log(\"Logout button pressed\");\r\n    // Add your logout logic here\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Avatar\r\n        size=\"xlarge\"\r\n        rounded\r\n        source={{\r\n          uri: user.avatarUrl,\r\n        }}\r\n        containerStyle={styles.avatar}\r\n      />\r\n      <Text style={styles.name}>{user.name}</Text>\r\n      <Text style={styles.email}>{user.email}</Text>\r\n      <Button\r\n        title=\"Logout\"\r\n        containerStyle={styles.logoutButtonContainer}\r\n        buttonStyle={styles.logoutButton}\r\n        onPress={handleLogout}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#f5f5f5\",\r\n  },\r\n  avatar: {\r\n    marginBottom: 20,\r\n  },\r\n  name: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 5,\r\n  },\r\n  email: {\r\n    fontSize: 18,\r\n    marginBottom: 20,\r\n  },\r\n  logoutButtonContainer: {\r\n    width: \"80%\",\r\n    marginHorizontal: \"10%\",\r\n  },\r\n  logoutButton: {\r\n    backgroundColor: \"#2089dc\",\r\n  },\r\n});\r\n\r\nexport default ProfileScreen;\r\n","import React, { useRef, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Animated,\r\n} from \"react-native\";\r\nimport { useSurgery } from \"../context/SurgeryContext\";\r\nimport { Colors, Fonts, Spacing, Borders } from \"../Theme\"; // Import theme\r\n\r\nconst PushNotificationsScreen = ({ route, navigation }) => {\r\n  const { or } = route.params;\r\n  const { getSurgerySteps, updateSurgeryStage } = useSurgery();\r\n  const steps = getSurgerySteps(or.surgeryType);\r\n\r\n  const currentStageIndex = steps.findIndex((step) => step === or.surgeryStage);\r\n  const [completed, setCompleted] = useState(\r\n    steps.map((_, index) => index <= currentStageIndex),\r\n  );\r\n\r\n  const animations = useRef(\r\n    steps.map(\r\n      (_, index) => new Animated.Value(index <= currentStageIndex ? 1 : 0),\r\n    ),\r\n  ).current;\r\n\r\n  const toggleStep = (index) => {\r\n    let newCompleted = [...completed];\r\n    newCompleted[index] = !newCompleted[index];\r\n    setCompleted(newCompleted);\r\n\r\n    Animated.timing(animations[index], {\r\n      toValue: newCompleted[index] ? 1 : 0,\r\n      duration: 300,\r\n      useNativeDriver: false,\r\n    }).start();\r\n\r\n    if (newCompleted[index]) {\r\n      updateSurgeryStage(or.id, steps[index]);\r\n      sendPushNotification(or.id, steps[index], or.surgeryType);\r\n    }\r\n  };\r\n\r\n  const sendPushNotification = async (orId, newStage, surgeryType) => {\r\n    console.log(`Sending push notification for OR ${orId}, stage ${newStage}`);\r\n    try {\r\n      const response = await fetch(\"http://10.0.0.55:8081/send-notification\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          title: \"Surgery Update\",\r\n          body: `${orId} is now at ${newStage} stage.`,\r\n          data: { orId, newStage },\r\n          priority: \"normal\",\r\n        }),\r\n      });\r\n      console.log(\"Notification sent:\", response);\r\n    } catch (error) {\r\n      console.error(\"Error sending notification:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.scrollView}>\r\n      <View style={styles.container}>\r\n        <Text style={styles.header}>{or.surgeryType}</Text>\r\n        <Text style={styles.subHeader}>Operating Room: {or.id}</Text>\r\n        <Text style={styles.subHeader}>Surgeon: {or.surgeonName}</Text>\r\n        <Text style={styles.notificationHeader}>Push Notification</Text>\r\n\r\n        {steps.map((step, index) => (\r\n          <View key={index} style={styles.stepContainer}>\r\n            <Animated.Text\r\n              style={[\r\n                styles.stepText,\r\n                {\r\n                  backgroundColor: animations[index].interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [\r\n                      Colors.successBackground,\r\n                      Colors.inactiveBackground,\r\n                    ],\r\n                  }),\r\n                },\r\n              ]}\r\n            >\r\n              {step}\r\n            </Animated.Text>\r\n            <TouchableOpacity\r\n              style={styles.notificationButton}\r\n              onPress={() => toggleStep(index)}\r\n            >\r\n              <Animated.View\r\n                style={[\r\n                  styles.checkboxInner,\r\n                  {\r\n                    backgroundColor: animations[index].interpolate({\r\n                      inputRange: [0, 1],\r\n                      outputRange: [\"transparent\", Colors.primary],\r\n                    }),\r\n                  },\r\n                ]}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n        ))}\r\n\r\n        {/* Go Back Button */}\r\n        <TouchableOpacity\r\n          style={[styles.baseButton, styles.secondaryButton]}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <Text style={styles.buttonText}>Go Back</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollView: {\r\n    backgroundColor: Colors.background,\r\n  },\r\n  container: {\r\n    padding: Spacing.medium,\r\n    backgroundColor: Colors.background,\r\n  },\r\n  header: {\r\n    fontSize: Fonts.size.large,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n    textAlign: \"center\",\r\n    marginVertical: Spacing.small,\r\n  },\r\n  subHeader: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.regular,\r\n    color: Colors.text,\r\n    textAlign: \"center\",\r\n    marginVertical: Spacing.xs,\r\n  },\r\n  notificationHeader: {\r\n    textAlign: \"right\",\r\n    fontWeight: Fonts.family.bold,\r\n    fontSize: Fonts.size.small,\r\n    color: Colors.secondary,\r\n    marginTop: Spacing.small,\r\n    marginBottom: Spacing.medium,\r\n  },\r\n  stepContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: Spacing.small,\r\n    backgroundColor: Colors.cardBackground,\r\n    borderRadius: Borders.radius.medium,\r\n    paddingHorizontal: Spacing.medium,\r\n    marginBottom: Spacing.xs,\r\n  },\r\n  stepText: {\r\n    flex: 0.8,\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.regular,\r\n    paddingVertical: Spacing.xs,\r\n    paddingHorizontal: Spacing.small,\r\n    borderRadius: Borders.radius.small,\r\n    color: Colors.text,\r\n  },\r\n  notificationButton: {\r\n    width: 30,\r\n    height: 30,\r\n    borderRadius: Borders.radius.full,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderWidth: 2,\r\n    borderColor: Colors.primary,\r\n  },\r\n  checkboxInner: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: Borders.radius.full,\r\n  },\r\n  baseButton: {\r\n    borderRadius: Borders.radius.medium,\r\n    paddingVertical: Spacing.medium,\r\n    alignItems: \"center\",\r\n    marginVertical: Spacing.small, // Consistent spacing\r\n    width: \"100%\",\r\n  },\r\n  secondaryButton: {\r\n    backgroundColor: Colors.secondary, // Secondary color for \"Go Back\" button\r\n  },\r\n  buttonText: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n  },\r\n});\r\n\r\nexport default PushNotificationsScreen;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Button,\r\n  Modal,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { Colors, Fonts, Spacing, Borders } from \"../Theme\";\r\nimport { useObstetrics } from \"../context/ObstetricsContext\";\r\nimport VitalsDataSection from \"../components/VitalsDataSection\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\n\r\nconst CustomCheckBox = ({ isChecked, onPress, label }) => (\r\n  <TouchableOpacity style={styles.checkBoxItem} onPress={onPress}>\r\n    <MaterialIcons\r\n      name={isChecked ? \"check-box\" : \"check-box-outline-blank\"}\r\n      size={28}\r\n      color={Colors.primary}\r\n    />\r\n    <Text style={styles.checkBoxLabel}>{label}</Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst DetailedObstetrics = ({ route, navigation }) => {\r\n  const { caseId } = route.params;\r\n  const { obCases, updateCaseStep, getCompletionPercentage } = useObstetrics();\r\n  const obCase = obCases.find((c) => c.id === caseId);\r\n\r\n  const [isTechModalVisible, setIsTechModalVisible] = useState(false);\r\n  const [equipmentRequests, setEquipmentRequests] = useState({\r\n    arterialLine: false,\r\n    glidescope: false,\r\n    POCUS: false,\r\n    vascularUltrasound: false,\r\n    CO2Absorber: false,\r\n  });\r\n\r\n  if (!obCase) {\r\n    return <Text>No data available for this case.</Text>;\r\n  }\r\n\r\n  const handleSubmitRequest = () => {\r\n    const selectedRequests = Object.keys(equipmentRequests).filter(\r\n      (item) => equipmentRequests[item],\r\n    );\r\n    Alert.alert(\r\n      \"Request Submitted\",\r\n      `Equipment requested: ${selectedRequests.join(\", \")}`,\r\n    );\r\n    setIsTechModalVisible(false);\r\n  };\r\n\r\n  const sendEmergencyNotification = async () => {\r\n    console.log(`Sending emergency notification for OB Room ${obCase.id}`);\r\n    try {\r\n      const response = await fetch(\"http://10.0.0.55:8081/send-notification\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          title: \"Emergency Alert!\",\r\n          body: `Emergency in Obstetrics Room Number ${obCase.id}!`,\r\n          data: { caseId: obCase.id },\r\n          priority: \"high\",\r\n        }),\r\n      });\r\n      console.log(\"Emergency notification sent:\", response);\r\n    } catch (error) {\r\n      console.error(\"Error sending emergency notification:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.scrollView}>\r\n      <View style={styles.container}>\r\n        <View style={styles.detailBox}>\r\n          <Text style={styles.title}>{obCase.patientName}</Text>\r\n          <Text style={styles.detailText}>Doctor: {obCase.doctorName}</Text>\r\n          <Text style={styles.detailText}>Room: {obCase.roomNumber}</Text>\r\n          <Text style={styles.detailText}>Status: {obCase.status}</Text>\r\n          <Text style={styles.detailText}>Type: {obCase.caseType}</Text>\r\n          <Text style={styles.detailText}>\r\n            Current Stage: {obCase.currentStep}\r\n          </Text>\r\n          <Text style={styles.detailText}>\r\n            Surgery Progression: {getCompletionPercentage(caseId)}\r\n          </Text>\r\n        </View>\r\n\r\n        <VitalsDataSection />\r\n\r\n        <TouchableOpacity\r\n          style={[styles.baseButton, styles.primaryButton]}\r\n          onPress={() =>\r\n            navigation.navigate(\"ObstetricsProgression\", { caseId: obCase.id })\r\n          }\r\n        >\r\n          <Text style={styles.buttonText}>Surgery Progression</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={[styles.baseButton, styles.primaryButton]}\r\n          onPress={() => setIsTechModalVisible(true)}\r\n        >\r\n          <Text style={styles.buttonText}>Anesthesia Tech</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={[styles.baseButton, styles.emergencyButton]}\r\n          onPress={sendEmergencyNotification}\r\n        >\r\n          <Text style={styles.buttonText}>Emergency in Room</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={[styles.baseButton, styles.secondaryButton]}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <Text style={styles.buttonText}>Go Back</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Anesthesia Tech Modal */}\r\n      <Modal\r\n        visible={isTechModalVisible}\r\n        transparent={true}\r\n        animationType=\"slide\"\r\n        onRequestClose={() => setIsTechModalVisible(false)}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>Anesthesia Tech Options</Text>\r\n            <TouchableOpacity\r\n              style={[styles.baseButton, styles.secondaryButton]}\r\n              onPress={() => Alert.alert(\"Calling Tech...\")}\r\n            >\r\n              <Text style={styles.buttonText}>Call Tech</Text>\r\n            </TouchableOpacity>\r\n            <Text style={styles.quickRequestTitle}>Quick Request:</Text>\r\n            <View style={styles.checkBoxContainer}>\r\n              {Object.keys(equipmentRequests).map((item) => (\r\n                <CustomCheckBox\r\n                  key={item}\r\n                  label={item.replace(/([A-Z])/g, \" $1\")}\r\n                  isChecked={equipmentRequests[item]}\r\n                  onPress={() =>\r\n                    setEquipmentRequests((prevState) => ({\r\n                      ...prevState,\r\n                      [item]: !prevState[item],\r\n                    }))\r\n                  }\r\n                />\r\n              ))}\r\n            </View>\r\n            <TouchableOpacity\r\n              style={[styles.baseButton, styles.primaryButton]}\r\n              onPress={handleSubmitRequest}\r\n            >\r\n              <Text style={styles.buttonText}>Submit Request</Text>\r\n            </TouchableOpacity>\r\n            <Button\r\n              title=\"Close\"\r\n              onPress={() => setIsTechModalVisible(false)}\r\n              color={Colors.primary}\r\n            />\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\n// Styles for the component\r\nconst styles = StyleSheet.create({\r\n  scrollView: {\r\n    backgroundColor: Colors.background,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.background,\r\n    padding: Spacing.medium,\r\n  },\r\n  detailBox: {\r\n    backgroundColor: Colors.cardBackground,\r\n    borderRadius: Borders.radius.medium,\r\n    padding: Spacing.medium,\r\n    marginVertical: Spacing.small,\r\n    shadowColor: Colors.shadow,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n  },\r\n  title: {\r\n    fontSize: Fonts.size.large,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n    marginBottom: Spacing.small,\r\n  },\r\n  detailText: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.regular,\r\n    color: Colors.text,\r\n    marginBottom: Spacing.xs,\r\n  },\r\n  buttonText: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n  },\r\n  baseButton: {\r\n    borderRadius: Borders.radius.medium,\r\n    paddingVertical: Spacing.medium,\r\n    alignItems: \"center\",\r\n    marginBottom: Spacing.small, // Consistent spacing\r\n    width: \"100%\",\r\n  },\r\n  primaryButton: {\r\n    backgroundColor: Colors.primary, // Primary color for standard buttons\r\n  },\r\n  secondaryButton: {\r\n    backgroundColor: Colors.secondary, // Secondary color for \"Go Back\" button\r\n  },\r\n  emergencyButton: {\r\n    backgroundColor: \"red\", // Red color for emergency button\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  modalContent: {\r\n    width: \"80%\",\r\n    backgroundColor: \"#FFF\",\r\n    padding: Spacing.medium,\r\n    borderRadius: Borders.radius.medium,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  modalTitle: {\r\n    fontSize: Fonts.size.large,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n    marginBottom: Spacing.small,\r\n    textAlign: \"center\",\r\n  },\r\n  callButton: {\r\n    backgroundColor: Colors.secondary,\r\n    borderRadius: Borders.radius.medium,\r\n    paddingVertical: Spacing.medium,\r\n    alignItems: \"center\",\r\n    marginVertical: Spacing.small,\r\n  },\r\n  quickRequestTitle: {\r\n    fontSize: Fonts.size.large,\r\n    fontFamily: Fonts.family.bold,\r\n    marginBottom: Spacing.small,\r\n    color: Colors.primary,\r\n  },\r\n  checkBoxContainer: {\r\n    marginVertical: Spacing.small,\r\n  },\r\n  checkBoxItem: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: Spacing.xs,\r\n  },\r\n  checkBoxLabel: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n    marginLeft: Spacing.small,\r\n    textTransform: \"capitalize\",\r\n  },\r\n  submitButton: {\r\n    backgroundColor: Colors.primary,\r\n    borderRadius: Borders.radius.medium,\r\n    paddingVertical: Spacing.medium,\r\n    alignItems: \"center\",\r\n    marginVertical: Spacing.small,\r\n  },\r\n  buttonWrapper: {\r\n    marginVertical: Spacing.medium,\r\n  },\r\n});\r\n\r\nexport default DetailedObstetrics;\r\n","import React, { useRef, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Animated,\r\n} from \"react-native\";\r\nimport { useObstetrics } from \"../context/ObstetricsContext\";\r\nimport surgeries from \"../data/surgeries.json\";\r\nimport { Colors, Fonts, Spacing, Borders } from \"../Theme\";\r\n\r\nconst ObstetricsProgressionScreen = ({ route, navigation }) => {\r\n  const { caseId } = route.params;\r\n  const { obCases, updateCaseStep } = useObstetrics();\r\n  const obCase = obCases.find((c) => c.id === caseId);\r\n\r\n  if (!obCase) {\r\n    return (\r\n      <Text style={styles.noDataText}>No data available for this case.</Text>\r\n    );\r\n  }\r\n\r\n  const surgery = surgeries.find((s) => s.surgeryType === obCase.caseType);\r\n  const steps = surgery ? surgery.steps : [];\r\n\r\n  const currentStageIndex = steps.findIndex(\r\n    (step) => step === obCase.currentStep,\r\n  );\r\n  const [completed, setCompleted] = useState(\r\n    steps.map((_, index) => index <= currentStageIndex),\r\n  );\r\n\r\n  const animations = useRef(\r\n    steps.map(\r\n      (_, index) => new Animated.Value(index <= currentStageIndex ? 1 : 0),\r\n    ),\r\n  ).current;\r\n\r\n  const toggleStep = (index) => {\r\n    let newCompleted = [...completed];\r\n    newCompleted[index] = !newCompleted[index];\r\n    setCompleted(newCompleted);\r\n\r\n    Animated.timing(animations[index], {\r\n      toValue: newCompleted[index] ? 1 : 0,\r\n      duration: 300,\r\n      useNativeDriver: false,\r\n    }).start();\r\n\r\n    if (newCompleted[index]) {\r\n      updateCaseStep(obCase.id);\r\n      sendPushNotification(obCase.id, steps[index], obCase.caseType);\r\n    }\r\n  };\r\n\r\n  const sendPushNotification = async (caseId, newStage, caseType) => {\r\n    console.log(\r\n      `Sending push notification for Case ${caseId}, stage ${newStage}`,\r\n    );\r\n    try {\r\n      const response = await fetch(\"http://10.0.0.55:8081/send-notification\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          title: \"Obstetrics Case Update\",\r\n          body: `${caseId} is now at ${newStage} stage.`,\r\n          data: { caseId, newStage },\r\n          priority: \"normal\",\r\n        }),\r\n      });\r\n      console.log(\"Notification sent:\", response);\r\n    } catch (error) {\r\n      console.error(\"Error sending notification:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.scrollView}>\r\n      <View style={styles.container}>\r\n        <Text style={styles.header}>{obCase.caseType}</Text>\r\n        <Text style={styles.subHeader}>{obCase.id}</Text>\r\n        <Text style={styles.subHeader}>Doctor: {obCase.doctorName}</Text>\r\n        <Text style={styles.notificationHeader}>Push Notification</Text>\r\n\r\n        {steps.map((step, index) => (\r\n          <View key={index} style={styles.stepContainer}>\r\n            <Animated.Text\r\n              style={[\r\n                styles.stepText,\r\n                {\r\n                  backgroundColor: animations[index].interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [\r\n                      Colors.successBackground,\r\n                      Colors.inactiveBackground,\r\n                    ],\r\n                  }),\r\n                },\r\n              ]}\r\n            >\r\n              {step}\r\n            </Animated.Text>\r\n            <TouchableOpacity\r\n              style={styles.notificationButton}\r\n              onPress={() => toggleStep(index)}\r\n            >\r\n              <Animated.View\r\n                style={[\r\n                  styles.checkboxInner,\r\n                  {\r\n                    backgroundColor: animations[index].interpolate({\r\n                      inputRange: [0, 1],\r\n                      outputRange: [\"transparent\", Colors.primary],\r\n                    }),\r\n                  },\r\n                ]}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n        ))}\r\n\r\n        {/* Go Back Button */}\r\n        <TouchableOpacity\r\n          style={[styles.baseButton, styles.secondaryButton]}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <Text style={styles.buttonText}>Go Back</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollView: {\r\n    backgroundColor: Colors.background,\r\n  },\r\n  container: {\r\n    padding: Spacing.medium,\r\n    backgroundColor: Colors.background,\r\n  },\r\n  noDataText: {\r\n    color: Colors.text,\r\n    fontSize: Fonts.size.medium,\r\n    textAlign: \"center\",\r\n    marginTop: Spacing.large,\r\n  },\r\n  header: {\r\n    fontSize: Fonts.size.large,\r\n    fontFamily: Fonts.family.bold,\r\n    color: Colors.primary,\r\n    textAlign: \"center\",\r\n    marginVertical: Spacing.small,\r\n  },\r\n  subHeader: {\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.regular,\r\n    color: Colors.text,\r\n    textAlign: \"center\",\r\n    marginVertical: Spacing.xs,\r\n  },\r\n  notificationHeader: {\r\n    textAlign: \"right\",\r\n    fontWeight: Fonts.family.bold,\r\n    fontSize: Fonts.size.small,\r\n    color: Colors.secondary,\r\n    marginTop: Spacing.small,\r\n    marginBottom: Spacing.medium,\r\n  },\r\n  stepContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: Spacing.small,\r\n    backgroundColor: Colors.cardBackground,\r\n    borderRadius: Borders.radius.medium,\r\n    paddingHorizontal: Spacing.medium,\r\n    marginBottom: Spacing.xs,\r\n  },\r\n  stepText: {\r\n    flex: 0.8,\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.regular,\r\n    paddingVertical: Spacing.xs,\r\n    paddingHorizontal: Spacing.small,\r\n    borderRadius: Borders.radius.small,\r\n    color: Colors.text,\r\n  },\r\n  notificationButton: {\r\n    width: 30,\r\n    height: 30,\r\n    borderRadius: Borders.radius.full,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderWidth: 2,\r\n    borderColor: Colors.primary,\r\n  },\r\n  checkboxInner: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: Borders.radius.full,\r\n  },\r\n  baseButton: {\r\n    borderRadius: Borders.radius.medium,\r\n    paddingVertical: Spacing.medium,\r\n    alignItems: \"center\",\r\n    marginVertical: Spacing.small, // Consistent spacing\r\n    width: \"100%\",\r\n  },\r\n  secondaryButton: {\r\n    backgroundColor: Colors.secondary, // Secondary color for \"Go Back\" button\r\n  },\r\n  buttonText: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: Fonts.size.medium,\r\n    fontFamily: Fonts.family.bold,\r\n  },\r\n});\r\n\r\nexport default ObstetricsProgressionScreen;\r\n","import React from \"react\";\r\nimport {\r\n  createDrawerNavigator,\r\n  DrawerContentScrollView,\r\n  DrawerItem,\r\n} from \"@react-navigation/drawer\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { SafeAreaView } from \"react-native\";\r\n\r\n// Import screens\r\nimport ORDashboard from \"../screens/ORDashboard\";\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\nimport DetailedOR from \"../screens/DetailedOR\";\r\nimport PACUScreen from \"../screens/PACUScreen\";\r\nimport RegionalScreen from \"../screens/RegionalScreen\";\r\nimport AcutePainScreen from \"../screens/AcutePainScreen\";\r\nimport ObstetricsScreen from \"../screens/ObstetricsScreen\";\r\nimport ProfileScreen from \"../components/ProfileScreen\";\r\nimport PushNotificationsScreen from \"../components/PushNotificationsScreen\";\r\nimport DetailedObstetrics from \"../screens/DetailedObstetrics\"; // Import the DetailedObstetrics screen\r\nimport ObstetricsProgressionScreen from \"../screens/ObstetricsProgressionScreen\"; // Import the new screen\r\n\r\n// Create Stack and Drawer Navigators\r\nconst Stack = createStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\n// Define HomeStack (Stack Navigator)\r\nfunction HomeStack() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"HomeScreen\"\r\n        component={HomeScreen}\r\n        options={{ title: \"Home\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"ORDashboard\"\r\n        component={ORDashboard}\r\n        options={{ title: \"OR Dashboard\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"DetailedOR\"\r\n        component={DetailedOR}\r\n        options={{ title: \"OR Details\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"PACUScreen\"\r\n        component={PACUScreen}\r\n        options={{ title: \"PACU\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"RegionalScreen\"\r\n        component={RegionalScreen}\r\n        options={{ title: \"Regional\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"AcutePainScreen\"\r\n        component={AcutePainScreen}\r\n        options={{ title: \"Acute Pain\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"ObstetricsScreen\"\r\n        component={ObstetricsScreen}\r\n        options={{ title: \"Obstetrics\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"PushNotifications\"\r\n        component={PushNotificationsScreen}\r\n        options={{ title: \"Messaging\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"DetailedObstetrics\"\r\n        component={DetailedObstetrics}\r\n        options={{ title: \"Obstetrics Case Details\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"ObstetricsProgression\"\r\n        component={ObstetricsProgressionScreen}\r\n        options={{ title: \"Obstetrics Progression\" }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n// Define custom content for the drawer\r\nfunction CustomDrawerContent(props) {\r\n  return (\r\n    <DrawerContentScrollView {...props}>\r\n      <SafeAreaView>\r\n        <DrawerItem\r\n          label=\"Home\"\r\n          onPress={() =>\r\n            props.navigation.reset({\r\n              index: 0,\r\n              routes: [{ name: \"HomeStack\" }],\r\n            })\r\n          }\r\n        />\r\n        <DrawerItem\r\n          label=\"Profile\"\r\n          onPress={() => props.navigation.navigate(\"Profile\")}\r\n        />\r\n      </SafeAreaView>\r\n    </DrawerContentScrollView>\r\n  );\r\n}\r\n\r\n// Main MenuInterface with Drawer Navigator\r\nconst MenuInterface = () => {\r\n  return (\r\n    <Drawer.Navigator\r\n      initialRouteName=\"HomeStack\"\r\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\r\n    >\r\n      <Drawer.Screen name=\"HomeStack\" component={HomeStack} />\r\n      <Drawer.Screen name=\"Profile\" component={ProfileScreen} />\r\n    </Drawer.Navigator>\r\n  );\r\n};\r\n\r\nexport default MenuInterface;\r\n","import * as Notifications from \"expo-notifications\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport * as Device from \"expo-device\";\r\nimport { Platform, Alert } from \"react-native\";\r\n\r\nNotifications.setNotificationHandler({\r\n  handleNotification: async () => ({\r\n    shouldShowAlert: true,\r\n    shouldPlaySound: false,\r\n    shouldSetBadge: false,\r\n  }),\r\n});\r\n\r\nexport async function registerForPushNotificationsAsync(setExpoPushToken) {\r\n  let token;\r\n  if (Device.isDevice) {\r\n    const { status: existingStatus } =\r\n      await Notifications.getPermissionsAsync();\r\n    let finalStatus = existingStatus;\r\n    if (existingStatus !== \"granted\") {\r\n      const { status } = await Notifications.requestPermissionsAsync();\r\n      finalStatus = status;\r\n    }\r\n    if (finalStatus !== \"granted\") {\r\n      Alert.alert(\"Failed to get push token for push notification!\");\r\n      return;\r\n    }\r\n    token = (await Notifications.getExpoPushTokenAsync()).data;\r\n    console.log(token);\r\n\r\n    // Send the token to your backend server\r\n    await fetch(\"http://10.0.0.55:8081/store-push-token\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        token,\r\n      }),\r\n    });\r\n\r\n    setExpoPushToken(token); // Save the token\r\n  } else {\r\n    Alert.alert(\"Must use physical device for Push Notifications\");\r\n  }\r\n\r\n  if (Platform.OS === \"android\") {\r\n    Notifications.setNotificationChannelAsync(\"default\", {\r\n      name: \"default\",\r\n      importance: Notifications.AndroidImportance.MAX,\r\n      vibrationPattern: [0, 250, 250, 250],\r\n      lightColor: \"#FF231F7C\",\r\n    });\r\n  }\r\n}\r\n","// Import necessary modules and components from React and React Native\r\nimport \"react-native-gesture-handler\"; // Enables gesture handling for navigation\r\nimport React, { useState, useEffect, useRef } from \"react\"; // Core React hooks\r\nimport { NavigationContainer } from \"@react-navigation/native\"; // Provides navigation context\r\n\r\n// Import your custom components and services\r\nimport MenuInterface from \"./navigation/MenuInterface\"; // Your navigation menu interface\r\nimport { SurgeryProvider } from \"./context/SurgeryContext\"; // Context provider for surgeries\r\nimport { ObstetricsProvider } from \"./context/ObstetricsContext\"; // Context provider for obstetrics cases\r\nimport { registerForPushNotificationsAsync } from \"./services/notifications\"; // Function to register for push notifications\r\n\r\n// Import notifications handling from Expo and alert handling from React Native\r\nimport * as Notifications from \"expo-notifications\"; // Manages notification features\r\nimport { Alert } from \"react-native\"; // Provides native alert functionality\r\n\r\n// Import react-native-paper components\r\nimport { Provider as PaperProvider } from \"react-native-paper\"; // Import the PaperProvider for Material Design UI\r\n\r\n// Define the main functional component of your app\r\nexport default function App() {\r\n  // State to hold the Expo push notification token\r\n  const [expoPushToken, setExpoPushToken] = useState(\"\");\r\n\r\n  // Refs to store notification listeners, allowing them to persist between renders\r\n  const notificationListener = useRef();\r\n  const responseListener = useRef();\r\n\r\n  // useEffect hook runs once when the component mounts, handling push notification setup\r\n  useEffect(() => {\r\n    // Call function to register for push notifications and store the token\r\n    registerForPushNotificationsAsync(setExpoPushToken);\r\n\r\n    // Set up listener for incoming notifications when the app is running in the foreground\r\n    notificationListener.current =\r\n      Notifications.addNotificationReceivedListener((notification) => {\r\n        // Extract title, body, and data from the notification\r\n        const { title, body, data } = notification.request.content;\r\n        // Show an alert with the notification details\r\n        Alert.alert(\r\n          title || \"Notification Received\", // Default title if none is provided\r\n          body || `OR ${data.orId} is now at ${data.newStage} stage.`, // Show a message based on the OR stage if no body is provided\r\n        );\r\n      });\r\n\r\n    // Set up listener for when the user interacts with a notification (foreground, background, or app killed)\r\n    responseListener.current =\r\n      Notifications.addNotificationResponseReceivedListener((response) => {\r\n        // Extract the notification content from the response\r\n        const { notification } = response;\r\n        const { title, body, data } = notification.request.content;\r\n        // Show an alert based on the notification content when a response is received\r\n        Alert.alert(\r\n          title || \"Notification Received\", // Default title\r\n          body || `OR ${data.orId} is now at ${data.newStage} stage.`, // Show a message based on the OR stage\r\n        );\r\n      });\r\n\r\n    // Cleanup function: removes the notification listeners when the component is unmounted\r\n    return () => {\r\n      Notifications.removeNotificationSubscription(\r\n        notificationListener.current, // Remove notification listener\r\n      );\r\n      Notifications.removeNotificationSubscription(responseListener.current); // Remove response listener\r\n    };\r\n  }, []); // Empty dependency array means this effect only runs once (on mount)\r\n\r\n  // Return the app's main component tree\r\n  return (\r\n    // Wrap everything in the SurgeryProvider and ObstetricsProvider to make both data sets available to all components\r\n    <SurgeryProvider>\r\n      <ObstetricsProvider>\r\n        {/* Wrap the entire app in PaperProvider to enable react-native-paper components */}\r\n        <PaperProvider>\r\n          {/* NavigationContainer provides the navigation context for the app */}\r\n          <NavigationContainer>\r\n            {/* MenuInterface contains the navigation menu (drawer or stack) */}\r\n            <MenuInterface />\r\n          </NavigationContainer>\r\n        </PaperProvider>\r\n      </ObstetricsProvider>\r\n    </SurgeryProvider>\r\n  );\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/Capstone/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [29], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["SurgeryContext","createContext","useSurgery","useContext","SurgeryProvider","_ref","children","initialOrData","id","surgeonName","raName","shift","replacement","name","time","surgeryType","map","or","_surgeriesData$find","_objectSpread","surgeryStage","surgeriesData","find","surgery","steps","_useState","useState","_useState2","_slicedToArray","orData","setOrData","_jsx","Provider","value","updateSurgeryStage","orId","newStage","prev","getSurgerySteps","Colors","primary","secondary","background","cardBackground","text","textLight","border","highlight","success","warning","error","Fonts","regular","bold","italic","tiny","small","medium","large","xlarge","title","Spacing","Borders","radius","width","color","Shadows","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","cardWidth","Dimensions","get","styles","StyleSheet","create","container","flex","alignItems","justifyContent","backgroundColor","card","borderRadius","padding","marginVertical","shadow","cardTitle","fontSize","fontFamily","marginBottom","cardContent","contentContainer","paddingTop","paddingBottom","navigation","_useSurgery","getCompletionPercentage","currentStep","currentStepIndex","indexOf","length","toFixed","View","style","FlatList","data","renderItem","_ref2","item","_jsxs","TouchableOpacity","onPress","navigate","Text","keyExtractor","contentContainerStyle","box","flexDirection","boxText","marginLeft","FontAwesome","size","heartRate","oxygenSaturation","bloodPressure","temperature","endTidalCO2","respiratoryRate","VitalBox","label","unit","icon","vitalBox","vitalsContainer","flexWrap","marginTop","fontWeight","selectionContainer","selectionButton","marginHorizontal","paddingHorizontal","borderWidth","borderColor","selectedButton","buttonText","textTransform","chartTitle","textAlign","chartContainer","chart","sampleVitals","currentVitals","setCurrentVitals","_useState3","_useState4","selectedVital","setSelectedVital","_useState5","slice","_useState6","chartData","setChartData","useEffect","index","intervalId","setInterval","prevChartData","newValue","concat","_toConsumableArray","clearInterval","formatLabel","replace","str","toUpperCase","FontAwesome5","MaterialCommunityIcons","Object","keys","filter","vital","LineChart","labels","datasets","parseFloat","chartConfig","backgroundGradientFrom","backgroundGradientTo","arguments","undefined","labelColor","strokeWidth","propsForDots","r","stroke","propsForBackgroundLines","bezier","CustomCheckBox","isChecked","checkBoxItem","MaterialIcons","checkBoxLabel","scrollView","detailBox","detailText","baseButton","paddingVertical","primaryButton","secondaryButton","emergencyButton","modalContainer","modalContent","modalTitle","callButton","quickRequestTitle","checkBoxContainer","submitButton","buttonWrapper","cases","route","params","o","isTechModalVisible","setIsTechModalVisible","arterialLine","glidescope","POCUS","vascularUltrasound","CO2Absorber","equipmentRequests","setEquipmentRequests","casesData","Math","floor","random","surgeryInfo","opStart","opstart","_useState7","_useState8","operationStartTime","setOperationStartTime","currentTime","Date","opStartString","getTime","toLocaleTimeString","hour","minute","handleEmergencyAlert","_ref3","_asyncToGenerator","response","fetch","method","headers","Accept","body","JSON","stringify","priority","console","log","apply","ScrollView","surgeries","s","totalSteps","VitalsDataSection","Modal","visible","transparent","animationType","onRequestClose","prevState","_defineProperty","selectedRequests","Alert","alert","join","Button","goBack","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","db","getFirestore","tableTitle","patientRow","patientDetails","paddingRight","patientName","patientInfo","anesthesiaInfo","checkboxContainer","lightBackground","dischargeLabel","marginRight","pacuPatients","setPacuPatients","fetchPacuPatients","patientsCollection","collection","patientsData","getDocs","docs","doc","toggleDischargeReadiness","currentStatus","patient","readyfordischarge","patientDocRef","updateDoc","prevPatients","_x","mrn","dob","anesthesiologist","Checkbox","status","convertTo24Hour","_time$split","split","_time$split2","hourMinute","modifier","_hourMinute$split","_hourMinute$split2","hours","minutes","parseInt","consultRow","consultDetails","consultName","consultInfo","urgentSwitch","urgentLabel","sortingButtons","sortButton","activeSortButton","textDecorationLine","anesthesiologistsSection","anesthesiologistsTitle","anesthesiologistRow","anesthesiologistName","available","busy","modalItem","borderBottomWidth","modalItemText","closeButton","closeButtonText","selectText","procedure","urgent","requestingPhysician","assignedClinician","consultRequests","setConsultRequests","anesthesiologists","modalVisible","setModalVisible","selectedConsultId","setSelectedConsultId","_useState9","_useState10","sortField","setSortField","sortConsults","field","sortedConsults","sort","a","b","consult","assignedClinicianBtn","Switch","onValueChange","prevConsults","trackColor","false","true","thumbColor","clinician","disabled","toString","sectionTitle","checkboxLabel","consultProcedure","seenToday","patients","setPatients","newConsults","header","requestItem","details","completed","requests","setRequests","request","prevRequests","ObstetricsContext","useObstetrics","ObstetricsProvider","obstetricsData","caseItem","obCases","setObCases","getSteps","caseId","obCase","c","updateCaseStep","prevCases","nextStepIndex","newStep","_useObstetrics","useNavigation","completionText","roomNumber","caseType","doctorName","Tab","createBottomTabNavigator","tabBarOptions","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","tabBarStyle","SafeAreaView","Navigator","screenOptions","Screen","component","EpiduralsTab","options","tabBarLabel","tabBarIcon","Ionicons","DeliveriesTab","avatar","email","logoutButtonContainer","logoutButton","user","Avatar","rounded","source","uri","containerStyle","buttonStyle","subHeader","notificationHeader","stepContainer","stepText","notificationButton","full","checkboxInner","currentStageIndex","findIndex","step","_","setCompleted","animations","useRef","Animated","Value","current","sendPushNotification","_x2","_x3","interpolate","inputRange","outputRange","successBackground","inactiveBackground","newCompleted","timing","toValue","duration","useNativeDriver","start","toggleStep","sendEmergencyNotification","noDataText","Stack","createStackNavigator","Drawer","createDrawerNavigator","HomeStack","HomeScreen","ORDashboard","DetailedOR","PACUScreen","RegionalScreen","AcutePainScreen","ObstetricsScreen","PushNotificationsScreen","DetailedObstetrics","ObstetricsProgressionScreen","CustomDrawerContent","props","DrawerContentScrollView","DrawerItem","reset","routes","initialRouteName","drawerContent","ProfileScreen","_registerForPushNotificationsAsync","setExpoPushToken","token","Device","isDevice","existingStatus","Notifications","finalStatus","handleNotification","_handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","App","notificationListener","responseListener","registerForPushNotificationsAsync","notification","_notification$request","content","_notification$request2","PaperProvider","NavigationContainer","MenuInterface","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","result","chunkIds","fn","notFulfilled","Infinity","i","fulfilled","j","every","key","splice","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","getOwnPropertyNames","forEach","definition","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}